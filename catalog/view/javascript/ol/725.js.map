{"version":3,"file":"725.js","mappings":"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","sources":["webpack://map/./node_modules/rbush/rbush.min.js","webpack://map/./node_modules/ol/Feature.js","webpack://map/./node_modules/ol/colorlike.js","webpack://map/./node_modules/ol/style/Text.js","webpack://map/./node_modules/ol/style/flat.js","webpack://map/./node_modules/ol/layer/BaseVector.js","webpack://map/./node_modules/ol/render/canvas/Instruction.js","webpack://map/./node_modules/ol/render/VectorContext.js","webpack://map/./node_modules/ol/render/canvas/Builder.js","webpack://map/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://map/./node_modules/ol/geom/flat/linechunk.js","webpack://map/./node_modules/ol/geom/flat/straightchunk.js","webpack://map/./node_modules/ol/render/canvas/TextBuilder.js","webpack://map/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://map/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://map/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://map/./node_modules/ol/geom/flat/textpath.js","webpack://map/./node_modules/ol/geom/flat/length.js","webpack://map/./node_modules/ol/render/canvas/Executor.js","webpack://map/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://map/./node_modules/ol/render/canvas/Immediate.js","webpack://map/./node_modules/ol/render/canvas/hitdetect.js","webpack://map/./node_modules/ol/renderer/vector.js","webpack://map/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://map/./node_modules/ol/layer/Vector.js","webpack://map/./node_modules/ol/structs/RBush.js","webpack://map/./node_modules/ol/source/VectorEventType.js","webpack://map/./node_modules/ol/loadingstrategy.js","webpack://map/./node_modules/ol/featureloader.js","webpack://map/./node_modules/ol/source/Vector.js","webpack://map/./node_modules/ol/style/Circle.js","webpack://map/./node_modules/ol/style/Fill.js","webpack://map/./node_modules/ol/style/IconImage.js","webpack://map/./node_modules/ol/style/Icon.js","webpack://map/./node_modules/ol/style/Image.js","webpack://map/./node_modules/ol/style/RegularShape.js","webpack://map/./node_modules/ol/style/Stroke.js","webpack://map/./node_modules/ol/style/Style.js"],"sourcesContent":["!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template Geometry\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  return color;\n}\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/style/flat\n */\n\nimport Circle from '../style/Circle.js';\nimport Fill from './Fill.js';\nimport Icon from './Icon.js';\nimport RegularShape from './RegularShape.js';\nimport Stroke from './Stroke.js';\nimport Style from './Style.js';\nimport Text from './Text.js';\n\n/**\n * For static styling, the [layer.setStyle()]{@link module:ol/layer/Vector~VectorLayer#setStyle} method\n * can be called with an object literal that has fill, stroke, text, icon, regular shape, and/or circle properties.\n * @api\n *\n * @typedef {FlatFill & FlatStroke & FlatText & FlatIcon & FlatShape & FlatCircle} FlatStyle\n */\n\n/**\n * A flat style literal or an array of the same.\n *\n * @typedef {FlatStyle|Array<FlatStyle>} FlatStyleLike\n */\n\n/**\n * Fill style properties applied to polygon features.\n *\n * @typedef {Object} FlatFill\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [fill-color] The fill color.\n */\n\n/**\n * Stroke style properties applied to line strings and polygon boundaries.  To apply a stroke, at least one of\n * `stroke-color` or `stroke-width` must be provided.\n *\n * @typedef {Object} FlatStroke\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [stroke-color] The stroke color.\n * @property {number} [stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [stroke-line-dash] Line dash pattern.\n * @property {number} [stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [stroke-miter-limit=10] Miter limit.\n */\n\n/**\n * Label style properties applied to all features.  At a minimum, a `text-value` must be provided.\n *\n * @typedef {Object} FlatText\n * @property {string|Array<string>} [text-value] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `'text-placement': 'line'` or the immediate rendering API.\n * @property {string} [text-font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [text-max-angle=Math.PI/4] When `text-placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [text-offset-x=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [text-offset-y=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [text-overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {import(\"./Text.js\").TextPlacement} [text-placement='point'] Text placement.\n * @property {number} [text-repeat] Repeat interval in pixels. When set, the text will be repeated at this interval. Only available when\n * `text-placement` is set to `'line'`. Overrides `text-align`.\n * @property {number|import(\"../size.js\").Size} [text-scale] Scale.\n * @property {boolean} [text-rotate-with-view=false] Whether to rotate the text with the view.\n * @property {number} [text-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {CanvasTextAlign} [text-align] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `'text-placement': 'point'`. For `'text-placement': 'line'`, the default is to let the renderer choose a\n * placement where `text-max-angle` is not exceeded.\n * @property {import('./Text.js').TextJustify} [text-justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `text-justify` is ignored for immediate rendering and also for `'text-placement': 'line'`.\n * @property {CanvasTextBaseline} [text-baseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {Array<number>} [text-padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-fill-color] The fill color. Specify `'none'` to avoid hit detection on the fill.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-stroke-line-dash] Line dash pattern.\n * @property {number} [text-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-stroke-width] Stroke pixel width.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [text-background-stroke-color] The stroke color.\n * @property {CanvasLineCap} [text-background-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [text-background-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [text-background-stroke-line-dash] Line dash pattern.\n * @property {number} [text-background-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [text-background-stroke-miter-limit=10] Miter limit.\n * @property {number} [text-background-stroke-width] Stroke pixel width.\n */\n\n/**\n * Icon style properties applied to point features.  One of `icon-src` or `icon-img` must be provided to render\n * points with an icon.\n *\n * @typedef {Object} FlatIcon\n * @property {string} [icon-src] Image source URI.\n * @property {HTMLImageElement|HTMLCanvasElement} [icon-img] Image object for the icon. If the `icon-src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `icon-img-size` option.\n * @property {import(\"../size.js\").Size} [icon-img-size] Image size in pixels. Only required if `icon-img` is set and `icon-src` is not.\n * The provided size needs to match the actual size of the image.\n * @property {Array<number>} [icon-anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-anchor-origin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-x-units='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./Icon.js\").IconAnchorUnits} [icon-anchor-y-units='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [icon-color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [icon-cross-origin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `icon-cross-origin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {Array<number>} [icon-offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {Array<number>} [icon-displacement=[0,0]] Displacement of the icon.\n * @property {import(\"./Icon.js\").IconOrigin} [icon-offset-origin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [icon-opacity=1] Opacity of the icon.\n * @property {number|import(\"../size.js\").Size} [icon-scale=1] Scale.\n * @property {number} [icon-width] Width of the icon. If not specified, the actual image width will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-height] Height of the icon. If not specified, the actual image height will be used. Cannot be combined\n * with `scale`.\n * @property {number} [icon-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [icon-rotate-with-view=false] Whether to rotate the icon with the view.\n * @property {import(\"../size.js\").Size} [icon-size] Icon size in pixel. Can be used together with `icon-offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [icon-declutter-mode] Declutter mode\n */\n\n/**\n * Regular shape style properties for rendering point features.  At least `shape-points` must be provided.\n *\n * @typedef {Object} FlatShape\n * @property {number} [shape-points] Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [shape-stroke-color] The stroke color.\n * @property {number} [shape-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [shape-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [shape-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [shape-stroke-line-dash] Line dash pattern.\n * @property {number} [shape-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [shape-stroke-miter-limit=10] Miter limit.\n * @property {number} [shape-radius] Radius of a regular polygon.\n * @property {number} [shape-radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [shape-radius2] Second radius of a star.\n * @property {number} [shape-angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {Array<number>} [shape-displacement=[0,0]] Displacement of the shape\n * @property {number} [shape-rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [shape-rotate-with-view=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [shape-scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `shape-radius`, `shape-radius1` and `shape-radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [shape-declutter-mode] Declutter mode.\n */\n\n/**\n * Circle style properties for rendering point features.  At least `circle-radius` must be provided.\n *\n * @typedef {Object} FlatCircle\n * @property {number} [circle-radius] Circle radius.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-fill-color] The fill color.\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [circle-stroke-color] The stroke color.\n * @property {number} [circle-stroke-width] Stroke pixel width.\n * @property {CanvasLineCap} [circle-stroke-line-cap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [circle-stroke-line-join='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [circle-stroke-line-dash] Line dash pattern.\n * @property {number} [circle-stroke-line-dash-offset=0] Line dash offset.\n * @property {number} [circle-stroke-miter-limit=10] Miter limit.\n * @property {Array<number>} [circle-displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [circle-scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `circle-radius`.\n * @property {number} [circle-rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [circle-rotate-with-view=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [circle-declutter-mode] Declutter mode\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @return {import(\"./Style.js\").default} A style instance.\n */\nexport function toStyle(flatStyle) {\n  const style = new Style({\n    fill: getFill(flatStyle, ''),\n    stroke: getStroke(flatStyle, ''),\n    text: getText(flatStyle),\n    image: getImage(flatStyle),\n  });\n\n  return style;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Fill|null|undefined} The fill (if any).\n */\nfunction getFill(flatStyle, prefix) {\n  const color = flatStyle[prefix + 'fill-color'];\n  if (!color) {\n    return;\n  }\n  if (color === 'none') {\n    return null;\n  }\n\n  return new Fill({color: color});\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @return {Stroke|undefined} The stroke (if any).\n */\nfunction getStroke(flatStyle, prefix) {\n  const width = flatStyle[prefix + 'stroke-width'];\n  const color = flatStyle[prefix + 'stroke-color'];\n  if (!width && !color) {\n    return;\n  }\n\n  return new Stroke({\n    width: width,\n    color: color,\n    lineCap: flatStyle[prefix + 'stroke-line-cap'],\n    lineJoin: flatStyle[prefix + 'stroke-line-join'],\n    lineDash: flatStyle[prefix + 'stroke-line-dash'],\n    lineDashOffset: flatStyle[prefix + 'stroke-line-dash-offset'],\n    miterLimit: flatStyle[prefix + 'stroke-miter-limit'],\n  });\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {Text|undefined} The text (if any).\n */\nfunction getText(flatStyle) {\n  const value = flatStyle['text-value'];\n  if (!value) {\n    return;\n  }\n\n  const text = new Text({\n    text: value,\n    font: flatStyle['text-font'],\n    maxAngle: flatStyle['text-max-angle'],\n    offsetX: flatStyle['text-offset-x'],\n    offsetY: flatStyle['text-offset-y'],\n    overflow: flatStyle['text-overflow'],\n    placement: flatStyle['text-placement'],\n    repeat: flatStyle['text-repeat'],\n    scale: flatStyle['text-scale'],\n    rotateWithView: flatStyle['text-rotate-with-view'],\n    rotation: flatStyle['text-rotation'],\n    textAlign: flatStyle['text-align'],\n    justify: flatStyle['text-justify'],\n    textBaseline: flatStyle['text-baseline'],\n    padding: flatStyle['text-padding'],\n    fill: getFill(flatStyle, 'text-'),\n    backgroundFill: getFill(flatStyle, 'text-background-'),\n    stroke: getStroke(flatStyle, 'text-'),\n    backgroundStroke: getStroke(flatStyle, 'text-background-'),\n  });\n\n  return text;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @return {import(\"./Image.js\").default|undefined} The image (if any).\n */\nfunction getImage(flatStyle) {\n  const iconSrc = flatStyle['icon-src'];\n  const iconImg = flatStyle['icon-img'];\n  if (iconSrc || iconImg) {\n    const icon = new Icon({\n      src: iconSrc,\n      img: iconImg,\n      imgSize: flatStyle['icon-img-size'],\n      anchor: flatStyle['icon-anchor'],\n      anchorOrigin: flatStyle['icon-anchor-origin'],\n      anchorXUnits: flatStyle['icon-anchor-x-units'],\n      anchorYUnits: flatStyle['icon-anchor-y-units'],\n      color: flatStyle['icon-color'],\n      crossOrigin: flatStyle['icon-cross-origin'],\n      offset: flatStyle['icon-offset'],\n      displacement: flatStyle['icon-displacement'],\n      opacity: flatStyle['icon-opacity'],\n      scale: flatStyle['icon-scale'],\n      width: flatStyle['icon-width'],\n      height: flatStyle['icon-height'],\n      rotation: flatStyle['icon-rotation'],\n      rotateWithView: flatStyle['icon-rotate-with-view'],\n      size: flatStyle['icon-size'],\n      declutterMode: flatStyle['icon-declutter-mode'],\n    });\n    return icon;\n  }\n\n  const shapePoints = flatStyle['shape-points'];\n  if (shapePoints) {\n    const prefix = 'shape-';\n    const shape = new RegularShape({\n      points: shapePoints,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      radius: flatStyle['shape-radius'],\n      radius1: flatStyle['shape-radius1'],\n      radius2: flatStyle['shape-radius2'],\n      angle: flatStyle['shape-angle'],\n      displacement: flatStyle['shape-displacement'],\n      rotation: flatStyle['shape-rotation'],\n      rotateWithView: flatStyle['shape-rotate-with-view'],\n      scale: flatStyle['shape-scale'],\n      declutterMode: flatStyle['shape-declutter-mode'],\n    });\n\n    return shape;\n  }\n\n  const circleRadius = flatStyle['circle-radius'];\n  if (circleRadius) {\n    const prefix = 'circle-';\n    const circle = new Circle({\n      radius: circleRadius,\n      fill: getFill(flatStyle, prefix),\n      stroke: getStroke(flatStyle, prefix),\n      displacement: flatStyle['circle-displacement'],\n      scale: flatStyle['circle-scale'],\n      rotation: flatStyle['circle-rotation'],\n      rotateWithView: flatStyle['circle-rotate-with-view'],\n      declutterMode: flatStyle['circle-declutter-mode'],\n    });\n\n    return circle;\n  }\n\n  return;\n}\n\n/**\n * @return {import('./flat.js').FlatStyle} The default flat style.\n */\nexport function createDefaultStyle() {\n  return {\n    'fill-color': 'rgba(255,255,255,0.4)',\n    'stroke-color': '#3399CC',\n    'stroke-width': 1.25,\n    'circle-radius': 5,\n    'circle-fill-color': 'rgba(255,255,255,0.4)',\n    'circle-stroke-width': 1.25,\n    'circle-stroke-color': '#3399CC',\n  };\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {toStyle} from '../style/flat.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n *\n * As an optimization decluttered features from layers with the same `className` are rendered above\n * the fill and stroke styles of all of those layers regardless of z-index.  To opt out of this\n * behavior and place declutterd features with their own layer configure the layer with a `className`\n * other than `ol-layer`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ =\n      options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!frameState.declutterTree) {\n      frameState.declutterTree = new RBush(9);\n    }\n    /** @type {*} */ (this.getRenderer()).renderDeclutter(frameState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleLike|null}\n     */\n    let styleLike;\n\n    if (style === undefined) {\n      styleLike = createDefaultStyle;\n    } else if (style === null) {\n      styleLike = null;\n    } else if (typeof style === 'function') {\n      styleLike = style;\n    } else if (style instanceof Style) {\n      styleLike = style;\n    } else if (Array.isArray(style)) {\n      const len = style.length;\n\n      /**\n       * @type {Array<Style>}\n       */\n      const styles = new Array(len);\n\n      for (let i = 0; i < len; ++i) {\n        const s = style[i];\n        if (s instanceof Style) {\n          styles[i] = s;\n        } else {\n          styles[i] = toStyle(s);\n        }\n      }\n      styleLike = styles;\n    } else {\n      styleLike = toStyle(style);\n    }\n\n    this.style_ = styleLike;\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer) {\n    this.beginGeometry(geometry, feature);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1)\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1]\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        undefined,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      1,\n      offsetY,\n      strokeKey,\n      strokeWidth,\n      text,\n      textKey,\n      1 / pixelRatio,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ = fillState\n        ? typeof fillState.fillStyle == 'string'\n          ? fillState.fillStyle\n          : '|' + getUid(fillState.fillStyle)\n        : '';\n    }\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: number, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction)\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    contextScale,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= canvas.width / contextScale &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= canvas.height / contextScale &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction)\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context['strokeStyle'] =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    contextScale,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          const declutterMode =\n            /** @type {\"declutter\"|\"obstacle\"|\"none\"|undefined} */ (\n              instruction[14]\n            );\n          const declutterImageWithText =\n            /** @type {import(\"../canvas.js\").DeclutterImageWithText} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              contextScale,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              if (declutterMode === 'none') {\n                // not rendered in declutter group\n                continue;\n              } else if (declutterMode === 'obstacle') {\n                // will always be drawn, thus no collision detection, but insert as obstacle\n                declutterTree.insert(dimensions.declutterBox);\n                continue;\n              } else {\n                let imageArgs;\n                let imageDeclutterBox;\n                if (declutterImageWithText) {\n                  const index = dd - d;\n                  if (!declutterImageWithText[index]) {\n                    // We now have the image for an image+text combination.\n                    declutterImageWithText[index] = args;\n                    // Don't render anything for now, wait for the text.\n                    continue;\n                  }\n                  imageArgs = declutterImageWithText[index];\n                  delete declutterImageWithText[index];\n                  imageDeclutterBox = getDeclutterBox(imageArgs);\n                  if (declutterTree.collides(imageDeclutterBox)) {\n                    continue;\n                  }\n                }\n                if (declutterTree.collides(dimensions.declutterBox)) {\n                  continue;\n                }\n                if (imageArgs) {\n                  // We now have image and text for an image+text combination.\n                  declutterTree.insert(imageDeclutterBox);\n                  // Render the image before we render the text.\n                  this.replayImageOrLabel_.apply(this, imageArgs);\n                }\n                declutterTree.insert(dimensions.declutterBox);\n              }\n            }\n            this.replayImageOrLabel_.apply(this, args);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature\n                  );\n                  if (\n                    declutterTree &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    contextScale,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree) {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(feature, currentGeometry);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle =\n            /** @type {import(\"../../colorlike.js\").ColorLike} */ (\n              instruction[1]\n            );\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      contextScale,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      1,\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nconst ORDER = ['Polygon', 'Circle', 'LineString', 'Image', 'Text', 'Default'];\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1]\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true}\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} contextScale Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    contextScale,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    builderTypes = builderTypes ? builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          replay.execute(\n            context,\n            contextScale,\n            transform,\n            viewRotation,\n            snapToPixel,\n            declutterTree\n          );\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY\n        );\n        context.setTransform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry)\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry)\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry)\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry)\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          )\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry)\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride()\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash)\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation\n) {\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(extent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false}\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            imgSize: imgSize,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          })\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  // @ts-ignore Features are copied from `features` to `resultFeatures` so the type should be the same\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderCircleGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutterBuilderGroup\n) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutterBuilderGroup\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutterBuilderGroup\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer()\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString'\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  let declutterImageWithText;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    let imageBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      const declutterMode = imageStyle.getDeclutterMode();\n      if (declutterMode !== 'none') {\n        imageBuilderGroup = declutterBuilderGroup;\n        if (declutterMode === 'obstacle') {\n          // draw in non-declutter group:\n          const imageReplay = builderGroup.getBuilder(\n            style.getZIndex(),\n            'Image'\n          );\n          imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n          imageReplay.drawMultiPoint(geometry, feature);\n        } else if (textStyle && textStyle.getText()) {\n          declutterImageWithText = {};\n        }\n      }\n    }\n    const imageReplay = imageBuilderGroup.getBuilder(\n      style.getZIndex(),\n      'Image'\n    );\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  if (textStyle && textStyle.getText()) {\n    let textBuilderGroup = builderGroup;\n    if (declutterBuilderGroup) {\n      textBuilderGroup = declutterBuilderGroup;\n    }\n    const textReplay = textBuilderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n */\nfunction renderPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = (declutterBuilderGroup || builderGroup).getBuilder(\n      style.getZIndex(),\n      'Text'\n    );\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  apply,\n  makeInverse,\n  makeScale,\n  toString as transformToString,\n} from '../../transform.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.compositionContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  renderWorlds(executorGroup, frameState, declutterTree) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.compositionContext_;\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      const transform = this.getRenderTransform(\n        center,\n        resolution,\n        rotation,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth\n      );\n      executorGroup.execute(\n        context,\n        1,\n        transform,\n        rotation,\n        snapToPixel,\n        undefined,\n        declutterTree\n      );\n    } while (++world < endWorld);\n  }\n\n  setupCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const compositionContext = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool\n      );\n      this.compositionContext_ = compositionContext;\n    } else {\n      this.compositionContext_ = this.context;\n    }\n  }\n\n  releaseCompositionContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.context.globalAlpha;\n      this.context.globalAlpha = this.opacity_;\n      this.context.drawImage(this.compositionContext_.canvas, 0, 0);\n      this.context.globalAlpha = alpha;\n      releaseCanvas(this.compositionContext_);\n      canvasPool.push(this.compositionContext_.canvas);\n      this.compositionContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (this.declutterExecutorGroup) {\n      this.setupCompositionContext_();\n      this.renderWorlds(\n        this.declutterExecutorGroup,\n        frameState,\n        frameState.declutterTree\n      );\n      this.releaseCompositionContext_();\n    }\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    const declutterExecutorGroup = this.declutterExecutorGroup;\n    let render =\n      (replayGroup && !replayGroup.isEmpty()) ||\n      (declutterExecutorGroup && !declutterExecutorGroup.isEmpty());\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n\n    this.opacity_ = layerState.opacity;\n    this.setupCompositionContext_();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(this.compositionContext_, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(replayGroup, frameState);\n    }\n\n    if (clipped) {\n      this.compositionContext_.restore();\n    }\n\n    this.releaseCompositionContext_();\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        const size = [this.context.canvas.width, this.context.canvas.height];\n        apply(this.pixelTransform, size);\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0\n          ).slice()\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX\n              ).slice()\n            );\n            startX -= worldWidth;\n          }\n        }\n\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_)\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          })\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    if (this.declutterExecutorGroup) {\n      executorGroups.push(this.declutterExecutorGroup);\n    }\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        executorGroup === this.declutterExecutorGroup &&\n          frameState.declutterTree\n          ? frameState.declutterTree.all().map((item) => item.value)\n          : null\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio\n    );\n\n    let declutterBuilderGroup;\n    if (this.getLayer().getDeclutter()) {\n      declutterBuilderGroup = new CanvasBuilderGroup(\n        getRenderTolerance(resolution, pixelRatio),\n        extent,\n        resolution,\n        pixelRatio\n      );\n    }\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       */\n      (feature) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            declutterBuilderGroup\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer()\n    );\n\n    if (declutterBuilderGroup) {\n      this.declutterExecutorGroup = new ExecutorGroup(\n        extent,\n        resolution,\n        pixelRatio,\n        vectorSource.getOverlaps(),\n        declutterBuilderGroup.finish(),\n        vectorLayer.getRenderBuffer()\n      );\n    }\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutterBuilderGroup\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutterBuilderGroup\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutterBuilderGroup\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default} VectorSourceType\n * @extends {BaseVectorLayer<VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection)\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection)\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<import(\"./Feature.js\").default>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      /** @type {Document|Node|Object|string|undefined} */\n      let source;\n      if (type == 'json' || type == 'text') {\n        source = xhr.responseText;\n      } else if (type == 'xml') {\n        source = xhr.responseXML;\n        if (!source) {\n          source = new DOMParser().parseFromString(\n            xhr.responseText,\n            'application/xml'\n          );\n        }\n      } else if (type == 'arraybuffer') {\n        source = /** @type {ArrayBuffer} */ (xhr.response);\n      }\n      if (source) {\n        success(\n          /** @type {Array<import(\"./Feature.js\").default>} */\n          (\n            format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection,\n            })\n          ),\n          format.readProjection(source)\n        );\n      } else {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<import(\"./Feature.js\").default>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source = /** @type {import(\"./source/Vector\").default} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>} [feature] Feature.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<import(\"../Feature.js\").default<Geometry>>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default<Geometry>>|Collection<import(\"../Feature.js\").default<Geometry>>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} [Geometry=import(\"../geom/Geometry.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<Geometry>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(\n        this.url_,\n        /** @type {import(\"../format/Feature.js\").default} */ (this.format_)\n      );\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<import(\"../Feature.js\").default<Geometry>>} */\n    let collection;\n    /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature)\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_), 30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i])\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<import(\"../Feature.js\").default<Geometry>>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      }\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (\n      features\n    );\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent))\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x,\n            y,\n            closestPoint,\n            minSquaredDistance\n          );\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      }\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (\n      event.target\n    );\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature)\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        }\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART)\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features\n              )\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR)\n            );\n          }\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {import(\"../Feature.js\").default<Geometry>|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    if (!featureChangeKeys) {\n      return;\n    }\n    featureChangeKeys.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature)\n    );\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    } else {\n      this.size_ = [this.image_.width, this.image_.height];\n    }\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n    } catch (e) {\n      this.handleImageError_();\n    }\n    this.unlisten_ = listenImage(\n      this.image_,\n      this.handleImageLoad_.bind(this),\n      this.handleImageError_.bind(this)\n    );\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not.\n * The provided `imgSize` needs to match the actual size of the image.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|undefined}\n     */\n    this.imgSize_ = options.imgSize;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image), 4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && this.imgSize_), 5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0, 6); // A defined and non-empty `src` or `image` must be provided\n\n    // `width` or `height` cannot be provided together with `scale`\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      69\n    );\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState =\n      options.src !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (src),\n      this.imgSize_ !== undefined ? this.imgSize_ : null,\n      this.crossOrigin_,\n      imageState,\n      this.color_\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (\n          image instanceof HTMLCanvasElement ||\n          (image.src && image.complete)\n        ) {\n          width = image.width;\n          height = image.height;\n        } else {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height\n              )\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height)\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    const clone = new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      imgSize: this.imgSize_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    return clone;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} declutterMode Declutter mode: `declutter`, `obstacle`, 'none */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {\"declutter\"|\"obstacle\"|\"none\"|undefined}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {\"declutter\"|\"obstacle\"|\"none\"|undefined} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] First radius of a star. Ignored if radius is set.\n * @property {number} [radius2] Second radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius`, `radius1` and `radius2`.\n * @property {\"declutter\"|\"obstacle\"|\"none\"|undefined} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = undefined;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ =\n      options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_ = null;\n\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    if (!size) {\n      return null;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.createHitDetectionCanvas_(this.renderOptions_);\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvas_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvas_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvas_ = {};\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(\n          renderOptions.size,\n          renderOptions.size\n        );\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.getImage(1);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof (/** @type {?} */ (obj).getZIndex) === 'function', 41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point']\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n"],"names":["module","exports","t","r","e","a","h","n","o","s","l","Math","log","f","exp","u","sqrt","max","floor","min","p","d","x","i","length","this","_maxEntries","_minEntries","ceil","clear","indexOf","children","minX","minY","maxX","maxY","leaf","m","c","height","pop","push","prototype","all","_all","data","search","toBBox","collides","load","insert","_build","slice","_splitRoot","_insert","remove","splice","_condense","compareMinX","compareMinY","toJSON","fromJSON","apply","pow","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","sort","Feature","constructor","geometryOrProperties","super","on","once","un","id_","undefined","geometryName_","style_","styleFunction_","geometryChangeKey_","addChangeListener","handleGeometryChanged_","geometry","setGeometry","properties","setProperties","clone","hasProperties","getProperties","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","get","getId","getStyleFunction","handleGeometryChange_","changed","CHANGE","set","obj","styles","Array","isArray","createStyleFunction","setId","id","name","removeChangeListener","asColorLike","color","Text","options","font_","font","rotation_","rotation","rotateWithView_","rotateWithView","scale_","scale","scaleArray_","text_","text","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","fill_","fill","Fill","maxAngle_","maxAngle","PI","placement_","placement","overflow_","overflow","stroke_","stroke","offsetX_","offsetX","offsetY_","offsetY","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","padding","getScale","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getRotation","getRotateWithView","getText","getTextAlign","getJustify","getTextBaseline","getFill","getStroke","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","getScaleArray","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setRotateWithView","setFill","setRotation","setScale","setStroke","setText","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","toStyle","flatStyle","Style","image","getImage","prefix","width","Stroke","lineCap","lineJoin","lineDash","lineDashOffset","miterLimit","value","iconSrc","iconImg","Icon","src","img","imgSize","anchor","anchorOrigin","anchorXUnits","anchorYUnits","crossOrigin","offset","displacement","opacity","size","declutterMode","shapePoints","RegularShape","points","radius","radius1","radius2","angle","circleRadius","Circle","Property","BaseVectorLayer","Layer","baseOptions","Object","assign","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getDeclutter","getFeatures","pixel","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","renderDeclutter","frameState","declutterTree","getRenderer","setRenderOrder","renderOrder","styleLike","len","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","drawCustom","feature","renderer","hitDetectionRenderer","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","fillStyle","strokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","tolerance","maxExtent","resolution","pixelRatio","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinates","tmpCoordinate_","hitDetectionInstructions","state","applyPixelRatio","dashArray","map","dash","appendFlatPointCoordinates","flatCoordinates","stride","extent","getBufferedMaxExtent","tmpCoord","myEnd","ii","appendFlatLineCoordinates","end","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","Relationship","INTERSECTING","drawCustomCoordinates_","ends","builderEnds","builderEnd","beginGeometry","type","getType","getStride","builderBegin","builderEndss","getOrientedFlatCoordinates","endss","getEndss","myEnds","inflate","getFlatCoordinates","getEnds","endGeometry","finish","reverseHitDetectionInstructions","reverse","instruction","begin","fillStyleColor","getColor","strokeStyleColor","strokeStyleLineCap","getLineCap","strokeStyleLineDash","getLineDash","strokeStyleLineDashOffset","getLineDashOffset","strokeStyleLineJoin","getLineJoin","strokeStyleWidth","getWidth","lineWidth","strokeStyleMiterLimit","getMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","call","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","drawFlatCoordinatess_","numEnds","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","x1","y1","x2","y2","segmentLength","y","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","start","TEXT_ALIGN","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","hitDetectionImage_","image_","imagePixelRatio_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","width_","declutterMode_","declutterImageWithText_","sharedData","getAnchor","getSize","origin","getOrigin","getPixelRatio","getHitDetectionImage","getOpacity","getDeclutterMode","drawFlatCoordinates_","lastStroke","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryType","geometryWidths","getFlatMidpoint","getCenter","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","beg","filter","w","keep","saveTextStates_","p0","p1","p2","p3","NaN","getExtent","flatOffset","oo","cc","chunk","chunkBegin","range","drawChars_","strokeKey","textKey","fillKey","baseline","strokeWidth","abs","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","join","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","zIndex","builderType","zIndexKey","toString","replays","replay","Constructor","drawTextOnPath","startM","measureAndCacheTextWidth","cache","segmentM","advance","interpolate","beginX","beginY","startOffset","startLength","endM","endX","endY","flat","result","singleSegment","previousAngle","atan2","replace","delta","iStart","charLength","chars","substring","lineStringLength","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","RegExp","String","fromCharCode","horizontalTextAlign","align","test","createTextChunks","acc","line","overlaps","alignFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","createLabel","key","textIsArray","split","reduce","widths","heights","lineWidths","renderWidth","contextInstructions","label","leftRight","strokeInstructions","fillInstructions","previousFont","lineHeight","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","context","beginPath","moveTo","lineTo","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","centerX","centerY","anchorX","anchorY","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","transform","round","drawImageX","drawImageY","drawImageW","drawImageH","canvasTransform","replayImageOrLabel_","contextScale","imageOrLabel","dimensions","box","canvas","strokePadding","repeatSize","save","translate","rotate","restore","setLineDash","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","pixelCoordinates","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","dx","dy","arc","closePath","fn","coords","labelWithAnchor","widthIndex","args","imageArgs","imageDeclutterBox","index","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","part","execute","executeHitDetection","ORDER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","clip","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","forEachFeatureAtCoordinate","coordinate","hitTolerance","callback","declutteredFeatures","contextSize","newContext","willReadFrequently","clearRect","indexes","maxDistanceSq","distances","j","distanceSq","distance","pixelIndex","getPixelIndexArray","imageData","getImageData","includes","idx","zs","keys","Number","executor","isEmpty","builderTypes","jj","squaredTolerance","userTransform","context_","extent_","transform_","transformRotation_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","alpha","globalAlpha","setTransform","drawImage","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simplifyTransformed","getGeometryFunction","geometries","getGeometriesArray","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageSize","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","declutterBuilderGroup","getImageState","ImageState","LOADED","imageBuilderGroup","imageReplay","getZIndex","textBuilderGroup","textReplay","lineStringReplay","polygonReplay","replayGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","parseInt","getTolerance","renderFeature","listener","loading","imageState","ERROR","unlistenImageChange","IDLE","listenImageChange","simplifiedGeometry","renderGeometry","renderFeatureInternal","getHitDetectionRenderer","getGeometries","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","bind","animatingOrInteracting_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedExtent_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","declutterExecutorGroup","clipping","compositionContext_","renderWorlds","executorGroup","viewState","center","projection","projectionExtent","vectorSource","getLayer","getSource","viewHints","ViewHint","ANIMATING","INTERACTING","multiWorld","getWrapX","canWrapX","worldWidth","endWorld","world","getRenderTransform","setupCompositionContext_","compositionContext","releaseCompositionContext_","renderFrame","target","layerState","layerStatesArray","layerIndex","pixelTransform","inversePixelTransform","useContainer","getBackground","render","hasListener","PRERENDER","POSTRENDER","containerReused","preRender","clipped","layerExtent","clipUnrotated","postRender","container","Promise","resolve","layer","transforms","source","startX","features","styleFunction","imageSmoothingEnabled","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","setColor","getImageSize","imgContext","fillRect","setImage","byGeometryType","getGeometriesArrayRecursive","zIndexKeys","geomAndStyle","k","kk","createHitDetectionImageData","resultFeatures","g","hitDetect","matches","match","lastIndexOf","executorGroups","some","item","handleFontsChanged","getVisible","event","renderIfReadyAndVisible","prepareFrame","animating","interacting","ready","frameStateExtent","vectorLayerRevision","getRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","renderedExtent","loadExtents","gutter","loadExtent","userProjection","userExtent","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","BaseVector","createRenderer","maxEntries","rbush_","items_","extents","values","items","uid","update","bbox","getAll","getInExtent","forEach","forEach_","forEachInExtent","concat","rbush","Infinity","xhr","url","format","success","failure","XMLHttpRequest","open","responseType","withCredentials","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","onerror","send","loadFeaturesXhr","dataProjection","addFeatures","VectorSourceEvent","Event","VectorSource","Source","attributions","wrapX","loader_","format_","url_","loader","strategy_","strategy","useSpatialIndex","collection","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","getArray","Collection","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","dispatchEvent","VectorEventType","EventType","handleFeatureChange_","ObjectEventType","PROPERTYCHANGE","valid","newFeatures","geometryFeatures","modifyingCollection","addEventListener","evt","CollectionEventType","ADD","element","REMOVE","removeFeature","fast","featureId","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","intersectsCoordinate","forEachFeatureIntersectingExtent","intersectsExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","closestPoint","minSquaredDistance","previousMinSquaredDistance","closestPointXY","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","getLength","loadedExtentsRtree","extentsToLoad","extentToLoad","object","refresh","removeLoadedExtent","featureChangeKeys","removed","setLoader","setUrl","CircleStyle","getRadius","getDisplacement","setOpacity","setRadius","radius_","color_","taintedTestContext","IconImage","crossOrigin_","canvas_","unlisten_","imageState_","size_","src_","tainted_","initializeImage_","Image","isTainted_","dispatchChangeEvent_","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","getSrc","LOADING","document","createElement","ctx","getContext","globalCompositeOperation","calculateScale","wantedWidth","wantedHeight","anchor_","normalizedAnchor_","anchorOrigin_","anchorXUnits_","anchorYUnits_","imgSize_","iconImage_","iconImage","offset_","offsetOrigin_","offsetOrigin","origin_","HTMLCanvasElement","complete","initialOptions_","setAnchor","iconImageSize","getHeight","removeEventListener","ImageStyle","displacement_","setDisplacement","hitDetectionCanvas_","points_","radius2_","angle_","renderOptions_","getPoints","getRadius2","getAngle","createHitDetectionCanvas_","renderOptions","draw_","calculateLineJoinSize_","r1","r2","tmp","sin","miterRatio","bevelAdd","aa","innerMiterRatio","innerLength","createRenderOptions","add","maxRadius","createPath_","drawHitDetectionCanvas_","startAngle","step","angle0","radiusC","cos","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","geometry_","geometryFunction_","defaultGeometryFunction","renderer_","hitDetectionRenderer_","zIndex_","setRenderer","setHitDetectionRenderer","setZIndex","toFunction","defaultStyles","createDefaultStyle"],"sourceRoot":""}