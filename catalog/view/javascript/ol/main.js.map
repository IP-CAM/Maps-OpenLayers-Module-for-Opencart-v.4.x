{"version":3,"file":"main.js","mappings":"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","sources":["webpack://map/webpack/runtime/load script","webpack://map/./node_modules/ol/AssertionError.js","webpack://map/./node_modules/ol/Collection.js","webpack://map/./node_modules/ol/CollectionEventType.js","webpack://map/./node_modules/ol/Disposable.js","webpack://map/./node_modules/ol/Image.js","webpack://map/./node_modules/ol/ImageState.js","webpack://map/./node_modules/ol/Object.js","webpack://map/./node_modules/ol/ObjectEventType.js","webpack://map/./node_modules/ol/Observable.js","webpack://map/./node_modules/ol/centerconstraint.js","webpack://map/./node_modules/ol/resolutionconstraint.js","webpack://map/./node_modules/ol/View.js","webpack://map/./node_modules/ol/ViewHint.js","webpack://map/./node_modules/ol/ViewProperty.js","webpack://map/./node_modules/ol/array.js","webpack://map/./node_modules/ol/asserts.js","webpack://map/./node_modules/ol/color.js","webpack://map/./node_modules/ol/console.js","webpack://map/./node_modules/ol/coordinate.js","webpack://map/./node_modules/ol/css.js","webpack://map/./node_modules/ol/dom.js","webpack://map/./node_modules/ol/easing.js","webpack://map/./node_modules/ol/events.js","webpack://map/./node_modules/ol/events/Event.js","webpack://map/./node_modules/ol/events/EventType.js","webpack://map/./node_modules/ol/events/Target.js","webpack://map/./node_modules/ol/extent.js","webpack://map/./node_modules/ol/extent/Relationship.js","webpack://map/./node_modules/ol/functions.js","webpack://map/./node_modules/ol/geom/Point.js","webpack://map/./node_modules/ol/geom/flat/closest.js","webpack://map/./node_modules/ol/geom/flat/area.js","webpack://map/./node_modules/ol/geom/LinearRing.js","webpack://map/./node_modules/ol/geom/flat/reverse.js","webpack://map/./node_modules/ol/geom/flat/orient.js","webpack://map/./node_modules/ol/geom/Polygon.js","webpack://map/./node_modules/ol/geom/flat/interiorpoint.js","webpack://map/./node_modules/ol/geom/Geometry.js","webpack://map/./node_modules/ol/geom/SimpleGeometry.js","webpack://map/./node_modules/ol/geom/flat/contains.js","webpack://map/./node_modules/ol/geom/flat/deflate.js","webpack://map/./node_modules/ol/geom/flat/inflate.js","webpack://map/./node_modules/ol/geom/flat/intersectsextent.js","webpack://map/./node_modules/ol/geom/flat/segments.js","webpack://map/./node_modules/ol/geom/flat/simplify.js","webpack://map/./node_modules/ol/geom/flat/transform.js","webpack://map/./node_modules/ol/has.js","webpack://map/./node_modules/ol/layer/Base.js","webpack://map/./node_modules/ol/layer/Layer.js","webpack://map/./node_modules/ol/layer/Property.js","webpack://map/./node_modules/ol/math.js","webpack://map/./node_modules/ol/obj.js","webpack://map/./node_modules/ol/proj/Units.js","webpack://map/./node_modules/ol/proj/Projection.js","webpack://map/./node_modules/ol/proj/epsg3857.js","webpack://map/./node_modules/ol/proj/epsg4326.js","webpack://map/./node_modules/ol/proj/projections.js","webpack://map/./node_modules/ol/proj/transforms.js","webpack://map/./node_modules/ol/sphere.js","webpack://map/./node_modules/ol/proj.js","webpack://map/./node_modules/ol/render/Event.js","webpack://map/./node_modules/ol/render/EventType.js","webpack://map/./node_modules/ol/render/canvas.js","webpack://map/./node_modules/ol/renderer/Layer.js","webpack://map/./node_modules/ol/renderer/canvas/Layer.js","webpack://map/./node_modules/ol/rotationconstraint.js","webpack://map/./node_modules/ol/size.js","webpack://map/./node_modules/ol/source/Source.js","webpack://map/./node_modules/ol/style/IconImageCache.js","webpack://map/./node_modules/ol/tilegrid/common.js","webpack://map/./node_modules/ol/transform.js","webpack://map/./node_modules/ol/util.js","webpack://map/webpack/bootstrap","webpack://map/webpack/runtime/define property getters","webpack://map/webpack/runtime/ensure chunk","webpack://map/webpack/runtime/get javascript chunk filename","webpack://map/webpack/runtime/get mini-css chunk filename","webpack://map/webpack/runtime/global","webpack://map/webpack/runtime/hasOwnProperty shorthand","webpack://map/webpack/runtime/make namespace object","webpack://map/webpack/runtime/publicPath","webpack://map/webpack/runtime/jsonp chunk loading","webpack://map/./node_modules/ol/renderer/Map.js","webpack://map/./node_modules/ol/renderer/Composite.js","webpack://map/./node_modules/ol/layer/Group.js","webpack://map/./node_modules/ol/MapEvent.js","webpack://map/./node_modules/ol/MapBrowserEvent.js","webpack://map/./node_modules/ol/MapBrowserEventType.js","webpack://map/./node_modules/ol/pointer/EventType.js","webpack://map/./node_modules/ol/MapBrowserEventHandler.js","webpack://map/./node_modules/ol/MapEventType.js","webpack://map/./node_modules/ol/MapProperty.js","webpack://map/./node_modules/ol/structs/PriorityQueue.js","webpack://map/./node_modules/ol/TileQueue.js","webpack://map/./node_modules/ol/TileState.js","webpack://map/./node_modules/ol/control/Control.js","webpack://map/./node_modules/ol/control/Attribution.js","webpack://map/./node_modules/ol/control/Rotate.js","webpack://map/./node_modules/ol/control/Zoom.js","webpack://map/./node_modules/ol/control/defaults.js","webpack://map/./node_modules/ol/interaction/Property.js","webpack://map/./node_modules/ol/interaction/Interaction.js","webpack://map/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://map/./node_modules/ol/interaction/Pointer.js","webpack://map/./node_modules/ol/events/condition.js","webpack://map/./node_modules/ol/interaction/DragPan.js","webpack://map/./node_modules/ol/interaction/DragRotate.js","webpack://map/./node_modules/ol/render/Box.js","webpack://map/./node_modules/ol/interaction/DragBox.js","webpack://map/./node_modules/ol/interaction/DragZoom.js","webpack://map/./node_modules/ol/events/Key.js","webpack://map/./node_modules/ol/interaction/KeyboardPan.js","webpack://map/./node_modules/ol/interaction/KeyboardZoom.js","webpack://map/./node_modules/ol/Kinetic.js","webpack://map/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://map/./node_modules/ol/interaction/PinchRotate.js","webpack://map/./node_modules/ol/interaction/PinchZoom.js","webpack://map/./node_modules/ol/interaction/defaults.js","webpack://map/./node_modules/ol/Map.js","webpack://map/./node_modules/ol/layer/TileProperty.js","webpack://map/./node_modules/ol/layer/BaseTile.js","webpack://map/./node_modules/ol/Tile.js","webpack://map/./node_modules/ol/ImageTile.js","webpack://map/./node_modules/ol/reproj/Triangulation.js","webpack://map/./node_modules/ol/reproj.js","webpack://map/./node_modules/ol/reproj/Tile.js","webpack://map/./node_modules/ol/reproj/common.js","webpack://map/./node_modules/ol/TileRange.js","webpack://map/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://map/./node_modules/ol/layer/Tile.js","webpack://map/./node_modules/ol/structs/LRUCache.js","webpack://map/./node_modules/ol/tilecoord.js","webpack://map/./node_modules/ol/TileCache.js","webpack://map/./node_modules/ol/tilegrid/TileGrid.js","webpack://map/./node_modules/ol/tilegrid.js","webpack://map/./node_modules/ol/source/Tile.js","webpack://map/./node_modules/ol/tileurlfunction.js","webpack://map/./node_modules/ol/source/UrlTile.js","webpack://map/./node_modules/ol/source/TileEventType.js","webpack://map/./node_modules/ol/source/TileImage.js","webpack://map/./node_modules/ol/source/XYZ.js","webpack://map/./node_modules/ol/source/OSM.js","webpack://map/./node_modules/ol/control/FullScreen.js","webpack://map/./node_modules/ol/control/MousePosition.js","webpack://map/./node_modules/ol/Overlay.js","webpack://map/./node_modules/ol/control/OverviewMap.js","webpack://map/./node_modules/ol/control/ScaleLine.js","webpack://map/./node_modules/ol/control/ZoomSlider.js","webpack://map/./node_modules/ol/control/ZoomToExtent.js","webpack://map/./node_modules/ol/interaction/DragAndDrop.js","webpack://map/./node_modules/ol/interaction/DragRotateAndZoom.js","webpack://map/./node_modules/ol/source/BingMaps.js","webpack://map/./main.js"],"sourcesContent":["var inProgress = {};\nvar dataWebpackPrefix = \"map:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = (url, done, key, chunkId) => {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = (prev, event) => {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach((fn) => (fn(event)));\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","/**\n * @module ol/AssertionError\n */\n\n/** @type {Object<number, string>} */\nconst messages = {\n  1: 'The view center is not defined',\n  2: 'The view resolution is not defined',\n  3: 'The view rotation is not defined',\n  4: '`image` and `src` cannot be provided at the same time',\n  5: '`imgSize` must be set when `image` is provided',\n  7: '`format` must be set when `url` is set',\n  8: 'Unknown `serverType` configured',\n  9: '`url` must be configured or set using `#setUrl()`',\n  10: 'The default `geometryFunction` can only handle `Point` geometries',\n  11: '`options.featureTypes` must be an Array',\n  12: '`options.geometryName` must also be provided when `options.bbox` is set',\n  13: 'Invalid corner',\n  14: 'Invalid color',\n  15: 'Tried to get a value for a key that does not exist in the cache',\n  16: 'Tried to set a value for a key that is used already',\n  17: '`resolutions` must be sorted in descending order',\n  18: 'Either `origin` or `origins` must be configured, never both',\n  19: 'Number of `tileSizes` and `resolutions` must be equal',\n  20: 'Number of `origins` and `resolutions` must be equal',\n  22: 'Either `tileSize` or `tileSizes` must be configured, never both',\n  24: 'Invalid extent or geometry provided as `geometry`',\n  25: 'Cannot fit empty extent provided as `geometry`',\n  26: 'Features must have an id set',\n  27: 'Features must have an id set',\n  28: '`renderMode` must be `\"hybrid\"` or `\"vector\"`',\n  30: 'The passed `feature` was already added to the source',\n  31: 'Tried to enqueue an `element` that was already added to the queue',\n  32: 'Transformation matrix cannot be inverted',\n  33: 'Invalid units',\n  34: 'Invalid geometry layout',\n  36: 'Unknown SRS type',\n  37: 'Unknown geometry type found',\n  38: '`styleMapValue` has an unknown type',\n  39: 'Unknown geometry type',\n  40: 'Expected `feature` to have a geometry',\n  41: 'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n  42: 'Question unknown, the answer is 42',\n  43: 'Expected `layers` to be an array or a `Collection`',\n  47: 'Expected `controls` to be an array or an `ol/Collection`',\n  48: 'Expected `interactions` to be an array or an `ol/Collection`',\n  49: 'Expected `overlays` to be an array or an `ol/Collection`',\n  50: '`options.featureTypes` should be an Array',\n  51: 'Either `url` or `tileJSON` options must be provided',\n  52: 'Unknown `serverType` configured',\n  53: 'Unknown `tierSizeCalculation` configured',\n  55: 'The {-y} placeholder requires a tile grid with extent',\n  56: 'mapBrowserEvent must originate from a pointer event',\n  57: 'At least 2 conditions are required',\n  59: 'Invalid command found in the PBF',\n  60: 'Missing or invalid `size`',\n  61: 'Cannot determine IIIF Image API version from provided image information JSON',\n  62: 'A `WebGLArrayBuffer` must either be of type `ELEMENT_ARRAY_BUFFER` or `ARRAY_BUFFER`',\n  64: 'Layer opacity must be a number',\n  66: '`forEachFeatureAtCoordinate` cannot be used on a WebGL layer if the hit detection logic has not been enabled. This is done by providing adequate shaders using the `hitVertexShader` and `hitFragmentShader` properties of `WebGLPointsLayerRenderer`',\n  67: 'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both',\n  68: 'A VectorTile source can only be rendered if it has a projection compatible with the view projection',\n  69: '`width` or `height` cannot be provided together with `scale`',\n};\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const message = messages[code];\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @deprecated ol/AssertionError and error codes will be removed in v8.0\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n}\n\nexport default AssertionError;\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index)\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      )\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      )\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/Image\n */\nimport EventType from './events/EventType.js';\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {IMAGE_DECODE} from './has.js';\nimport {getHeight} from './extent.js';\nimport {listenOnce, unlistenByKey} from './events.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\nclass ImageWrapper extends ImageBase {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   * @param {CanvasRenderingContext2D} [context] Canvas context. When provided, the image will be\n   *    drawn into the context's canvas, and `getImage()` will return the canvas once the image\n   *    has finished loading.\n   */\n  constructor(\n    extent,\n    resolution,\n    pixelRatio,\n    src,\n    crossOrigin,\n    imageLoadFunction,\n    context\n  ) {\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n  }\n\n  /**\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    if (\n      this.state == ImageState.LOADED &&\n      this.context_ &&\n      !(this.image_ instanceof HTMLCanvasElement)\n    ) {\n      const canvas = this.context_.canvas;\n      canvas.width = this.image_.width;\n      canvas.height = this.image_.height;\n      this.context_.drawImage(this.image_, 0, 0);\n      this.image_ = this.context_.canvas;\n    }\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n    this.resolution = getHeight(this.extent) / this.image_.height;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection()\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection()\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided, the size\n   * of the map that uses this view will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 1); // The view center is not defined\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      24\n    ); // Invalid extent or geometry provided as `geometry`\n    if (Array.isArray(geometryOrExtent)) {\n      assert(!isEmpty(geometryOrExtent), 25); // Cannot fit empty extent provided as `geometry`\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection()\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation()\n      )\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size\n      )\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction)\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor)\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  }\n  return '';\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (function () {\n  // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n  // semantics, whenever the cache grows too large we simply delete an\n  // arbitrary 25% of the entries.\n\n  /**\n   * @const\n   * @type {number}\n   */\n  const MAX_CACHE_SIZE = 1024;\n\n  /**\n   * @type {Object<string, Color>}\n   */\n  const cache = {};\n\n  /**\n   * @type {number}\n   */\n  let cacheSize = 0;\n\n  return (\n    /**\n     * @param {string} s String.\n     * @return {Color} Color.\n     */\n    function (s) {\n      let color;\n      if (cache.hasOwnProperty(s)) {\n        color = cache[s];\n      } else {\n        if (cacheSize >= MAX_CACHE_SIZE) {\n          let i = 0;\n          for (const key in cache) {\n            if ((i++ & 3) === 0) {\n              delete cache[key];\n              --cacheSize;\n            }\n          }\n        }\n        color = fromStringInternal_(s);\n        cache[s] = color;\n        ++cacheSize;\n      }\n      return color;\n    }\n  );\n})();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) {\n    // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.startsWith('rgba(')) {\n    // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.startsWith('rgb(')) {\n    // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 100) / 100;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.startsWith('rgba(') || s.startsWith('rgb(');\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i'\n);\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = canvasPool.shift();\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1]\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates)\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice()\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0\n        )\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index]\n      ),\n      this.layout\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius)\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters\n) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function (\n      revision,\n      squaredTolerance,\n      transform\n    ) {\n      if (!transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1]\n      );\n    }\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i]\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i]\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i]\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    }\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1]\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3]\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride)\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    window.addEventListener('_', null, options);\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          // A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            67\n          );\n          layerStatesArray.push(layerState);\n        },\n        this\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing)\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat)\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326')\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward)\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse)\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857'\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326'\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.'\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(sourceProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[sourceUnits]) / METERS_PER_UNIT[userUnits]\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceUnits = get(destProjection).getUnits();\n  const userUnits = userProjection.getUnits();\n  return sourceUnits && userUnits\n    ? (resolution * METERS_PER_UNIT[userUnits]) / METERS_PER_UNIT[sourceUnits]\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326\n  );\n}\n\naddCommon();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    context.globalAlpha *= opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1]\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1]\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {import(\"../render/canvas/ExecutorGroup\").default}\n     */\n    this.declutterExecutorGroup = null;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor)\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  tolerance = tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        }\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color} color Color.\n   * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n   */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/transform\n */\nimport {WORKER_OFFSCREEN_CANVAS} from './has.js';\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {HTMLElement}\n * @private\n */\nlet transformStringDiv;\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  if (WORKER_OFFSCREEN_CANVAS) {\n    return transformString;\n  }\n  const node =\n    transformStringDiv || (transformStringDiv = document.createElement('div'));\n  node.style.transform = transformString;\n  return node.style.transform;\n}\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '7.5.2';\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = (chunkId) => {\n\t// return url for filenames based on template\n\treturn undefined;\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && !scriptUrl) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = (chunkId, promises) => {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise((resolve, reject) => (installedChunkData = installedChunks[chunkId] = [resolve, reject]));\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = (event) => {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkmap\"] = self[\"webpackChunkmap\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1]\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {}\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map)\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @type {Array<import(\"../layer/BaseVector.js\").default>}\n     */\n    this.declutterLayers_ = [];\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const declutterLayers = this.declutterLayers_;\n    declutterLayers.length = 0;\n\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n      if ('getDeclutter' in layer) {\n        declutterLayers.push(\n          /** @type {import(\"../layer/BaseVector.js\").default} */ (layer)\n        );\n      }\n    }\n    this.flushDeclutterItems(frameState);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  flushDeclutterItems(frameState) {\n    const layers = this.declutterLayers_;\n    for (let i = layers.length - 1; i >= 0; --i) {\n      layers[i].renderDeclutter(frameState);\n    }\n    layers.length = 0;\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} EventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {EventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(typeof (/** @type {?} */ (layers).getArray) === 'function', 43); // Expected `layers` to be an array or a `Collection`\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this)\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this\n        )\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging\n      )\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = elements.pop();\n      priorities[0] = priorities.pop();\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(!(this.keyFunction_(element) in this.queuedElements_), 31); // Tried to enqueue an `element` that was already added to the queue\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      }\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this)\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState))\n      )\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = this.collectSourceAttributions_(frameState);\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent\n      )\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent\n        )\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options)\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers))\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      })\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      })\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {import(\"rbush\").default} declutterTree DeclutterTree.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this)\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      }\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      }\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      }\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      }\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection()\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection()\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2)\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState)\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState)\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this)\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_();\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * This method is meant to be called in a layer's `prerender` listener. It causes all collected\n   * declutter items to be decluttered and rendered on the map immediately. This is useful for\n   * layers that need to appear entirely above the decluttered items of layers lower in the layer\n   * stack.\n   * @api\n   */\n  flushDeclutterItems() {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return;\n    }\n    this.renderer_.flushDeclutterItems(frameState);\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutterTree: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState)\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState)\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\"\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_();\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @private\n   */\n  updateViewportSize_() {\n    const view = this.getView();\n    if (view) {\n      let size = undefined;\n      const computedStyle = getComputedStyle(this.viewport_);\n      if (computedStyle.width && computedStyle.height) {\n        size = [\n          parseInt(computedStyle.width, 10),\n          parseInt(computedStyle.height, 10),\n        ];\n      }\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        47\n      ); // Expected `controls` to be an array or an `import(\"./Collection.js\").Collection`\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        48\n      ); // Expected `interactions` to be an array or an `import(\"./Collection.js\").Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        49\n      ); // Expected `overlays` to be an array or an `import(\"./Collection.js\").Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n\n    /**\n     * @type {Tile}\n     */\n    let prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256)\n              )\n            )\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0]\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0]\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0]\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round((pixelRatio * canvasWidthInUnits) / sourceResolution),\n    Math.round((pixelRatio * canvasHeightInUnits) / sourceResolution),\n    canvasPool\n  );\n\n  if (!interpolate) {\n    stitchContext.imageSmoothingEnabled = false;\n  }\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function (src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    // This test should never fail -- but it does. Need to find a fix the upstream condition\n    if (src.image.width > 0 && src.image.height > 0) {\n      stitchContext.drawImage(\n        src.image,\n        gutter,\n        gutter,\n        src.image.width - 2 * gutter,\n        src.image.height - 2 * gutter,\n        xPos * stitchScale,\n        yPos * stitchScale,\n        srcWidth * stitchScale,\n        srcHeight * stitchScale\n      );\n    }\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1))\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1))\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY\n    );\n\n    context.scale(\n      sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio\n    );\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  releaseCanvas(stitchContext);\n  canvasPool.push(stitchContext.canvas);\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {boolean} [interpolate] Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    interpolate\n  ) {\n    super(tileCoord, TileState.IDLE, {interpolate: !!interpolate});\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../ImageTile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3]\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent,\n        this.sourceZ_\n      );\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((tile) => {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach((tile) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function (tile, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getHeight,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  getWidth,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice()\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0])\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1])\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection)\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n    // desired dimensions of the canvas in pixels\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection)\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2\n    );\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]]\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload()\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h\n    );\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        )\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Object} newer Newer.\n * @property {Object} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  peek(key) {\n    if (!this.containsKey(key)) {\n      return undefined;\n    }\n    return this.entries_[key].value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_), 16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        function (a, b) {\n          return b - a;\n        },\n        true\n      ),\n      17\n    ); // `resolutions` must be sorted in descending order\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length, 20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18\n    ); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length, 19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n        ? DEFAULT_TILE_SIZE\n        : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22\n    ); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function (size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1)\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord)\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      68 // A VectorTile source can only be rendered if it has a projection compatible with the view projection.\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n          ? TileEventType.TILELOADEND\n          : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {}\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.getInterpolate()\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n","/**\n * @module ol/control/FullScreen\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceNode} from '../dom.js';\n\nconst events = [\n  'fullscreenchange',\n  'webkitfullscreenchange',\n  'MSFullscreenChange',\n];\n\n/**\n * @enum {string}\n */\nconst FullScreenEventType = {\n  /**\n   * Triggered after the map entered fullscreen.\n   * @event FullScreenEventType#enterfullscreen\n   * @api\n   */\n  ENTERFULLSCREEN: 'enterfullscreen',\n\n  /**\n   * Triggered after the map leave fullscreen.\n   * @event FullScreenEventType#leavefullscreen\n   * @api\n   */\n  LEAVEFULLSCREEN: 'leavefullscreen',\n};\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen', import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|\n *     'enterfullscreen'|'leavefullscreen'|import(\"../ObjectEventType\").Types, Return>} FullScreenOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|Text|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|Text|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [activeClassName=className + '-true'] CSS class name for the button\n * when full-screen is active.\n * @property {string} [inactiveClassName=className + '-false'] CSS class name for the button\n * when full-screen is inactive.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](https://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @fires FullScreenEventType#enterfullscreen\n * @fires FullScreenEventType#leavefullscreen\n * @api\n */\nclass FullScreen extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FullScreenOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FullScreenOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.isInFullscreen_ = false;\n\n    /**\n     * @private\n     */\n    this.boundHandleMapTargetChange_ = this.handleMapTargetChange_.bind(this);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ =\n      options.className !== undefined ? options.className : 'ol-full-screen';\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.documentListeners_ = [];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.activeClassName_ =\n      options.activeClassName !== undefined\n        ? options.activeClassName.split(' ')\n        : [this.cssClassName_ + '-true'];\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.inactiveClassName_ =\n      options.inactiveClassName !== undefined\n        ? options.inactiveClassName.split(' ')\n        : [this.cssClassName_ + '-false'];\n\n    const label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelNode_ =\n      typeof label === 'string' ? document.createTextNode(label) : label;\n\n    const labelActive =\n      options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {Text|HTMLElement}\n     */\n    this.labelActiveNode_ =\n      typeof labelActive === 'string'\n        ? document.createTextNode(labelActive)\n        : labelActive;\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.button_ = document.createElement('button');\n    this.button_.title = tipLabel;\n    this.button_.setAttribute('type', 'button');\n    this.button_.appendChild(this.labelNode_);\n    this.button_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n    this.setClassName_(this.button_, this.isInFullscreen_);\n\n    this.element.className = `${this.cssClassName_} ${CLASS_UNSELECTABLE} ${CLASS_CONTROL}`;\n    this.element.appendChild(this.button_);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreen_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const doc = map.getOwnerDocument();\n    if (!isFullScreenSupported(doc)) {\n      return;\n    }\n    if (isFullScreen(doc)) {\n      exitFullScreen(doc);\n    } else {\n      let element;\n      if (this.source_) {\n        element =\n          typeof this.source_ === 'string'\n            ? doc.getElementById(this.source_)\n            : this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFullScreenChange_() {\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const wasInFullscreen = this.isInFullscreen_;\n    this.isInFullscreen_ = isFullScreen(map.getOwnerDocument());\n    if (wasInFullscreen !== this.isInFullscreen_) {\n      this.setClassName_(this.button_, this.isInFullscreen_);\n      if (this.isInFullscreen_) {\n        replaceNode(this.labelActiveNode_, this.labelNode_);\n        this.dispatchEvent(FullScreenEventType.ENTERFULLSCREEN);\n      } else {\n        replaceNode(this.labelNode_, this.labelActiveNode_);\n        this.dispatchEvent(FullScreenEventType.LEAVEFULLSCREEN);\n      }\n      map.updateSize();\n    }\n  }\n\n  /**\n   * @param {HTMLElement} element Target element\n   * @param {boolean} fullscreen True if fullscreen class name should be active\n   * @private\n   */\n  setClassName_(element, fullscreen) {\n    if (fullscreen) {\n      element.classList.remove(...this.inactiveClassName_);\n      element.classList.add(...this.activeClassName_);\n    } else {\n      element.classList.remove(...this.activeClassName_);\n      element.classList.add(...this.inactiveClassName_);\n    }\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (oldMap) {\n      oldMap.removeChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n\n    super.setMap(map);\n\n    this.handleMapTargetChange_();\n    if (map) {\n      map.addChangeListener(\n        MapProperty.TARGET,\n        this.boundHandleMapTargetChange_\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleMapTargetChange_() {\n    const listeners = this.documentListeners_;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      unlistenByKey(listeners[i]);\n    }\n    listeners.length = 0;\n\n    const map = this.getMap();\n    if (map) {\n      const doc = map.getOwnerDocument();\n      if (isFullScreenSupported(doc)) {\n        this.element.classList.remove(CLASS_UNSUPPORTED);\n      } else {\n        this.element.classList.add(CLASS_UNSUPPORTED);\n      }\n\n      for (let i = 0, ii = events.length; i < ii; ++i) {\n        listeners.push(\n          listen(doc, events[i], this.handleFullScreenChange_, this)\n        );\n      }\n      this.handleFullScreenChange_();\n    }\n  }\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported(doc) {\n  const body = doc.body;\n  return !!(\n    body['webkitRequestFullscreen'] ||\n    (body.requestFullscreen && doc.fullscreenEnabled)\n  );\n}\n\n/**\n * @param {Document} doc The root document to check.\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen(doc) {\n  return !!(doc['webkitIsFullScreen'] || doc.fullscreenElement);\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element['webkitRequestFullscreen']) {\n    element['webkitRequestFullscreen']();\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n * @param {Document} doc The document to exit fullscren from\n */\nfunction exitFullScreen(doc) {\n  if (doc.exitFullscreen) {\n    doc.exitFullscreen();\n  } else if (doc['webkitExitFullscreen']) {\n    doc['webkitExitFullscreen']();\n  }\n}\n\nexport default FullScreen;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this)\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this)\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport View from '../View.js';\nimport ViewProperty from '../ViewProperty.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {\n  containsExtent,\n  equals as equalsExtent,\n  getBottomRight,\n  getTopLeft,\n  scaleFromCenter,\n} from '../extent.js';\nimport {listen, listenOnce} from '../events.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport {replaceNode} from '../dom.js';\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nconst MAX_RATIO = 0.75;\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nconst MIN_RATIO = 0.1;\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='‹'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='›'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<import(\"../layer/Base.js\").default>|import(\"../Collection.js\").default<import(\"../layer/Base.js\").default>} [layers]\n * Layers for the overview map.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {boolean} [rotateWithView=false] Whether the control view should rotate with the main map view.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {View} [view] Custom view for the overview map (should use same projection as main map). If not provided,\n * a default view with the same projection as the main map will be used.\n */\n\n/**\n * Create a new control with a map acting as an overview map for another\n * defined map.\n *\n * @api\n */\nclass OverviewMap extends Control {\n  /**\n   * @param {Options} [options] OverviewMap options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     */\n    this.boundHandleRotationChanged_ = this.handleRotationChanged_.bind(this);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.viewExtent_ = undefined;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u2039';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : '\\u203A';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * Explicitly given view to be used instead of a view derived from the main map.\n     * @type {View}\n     * @private\n     */\n    this.view_ = options.view;\n\n    const ovmap = new Map({\n      view: options.view,\n      controls: new Collection(),\n      interactions: new Collection(),\n    });\n\n    /**\n     * @type {Map}\n     * @private\n     */\n    this.ovmap_ = ovmap;\n\n    if (options.layers) {\n      options.layers.forEach(function (layer) {\n        ovmap.addLayer(layer);\n      });\n    }\n\n    const box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {import(\"../Overlay.js\").default}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: 'center-center',\n      element: box,\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    const scope = this;\n\n    const overlay = this.boxOverlay_;\n    const overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    const computeDesiredMousePosition = function (mousePosition) {\n      return {\n        clientX: mousePosition.clientX,\n        clientY: mousePosition.clientY,\n      };\n    };\n\n    const move = function (event) {\n      const position = /** @type {?} */ (computeDesiredMousePosition(event));\n      const coordinates = ovmap.getEventCoordinateInternal(\n        /** @type {MouseEvent} */ (position)\n      );\n\n      overlay.setPosition(coordinates);\n    };\n\n    const endMoving = function (event) {\n      const coordinates = ovmap.getEventCoordinateInternal(event);\n\n      scope.getMap().getView().setCenterInternal(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function () {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      const oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    super.setMap(map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(\n        listen(\n          map,\n          ObjectEventType.PROPERTYCHANGE,\n          this.handleMapPropertyChange_,\n          this\n        )\n      );\n\n      const view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n\n      if (!this.ovmap_.isRendered()) {\n        this.updateBoxAfterOvmapIsRendered_();\n      }\n    }\n  }\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {import(\"../Object.js\").ObjectEvent} event The propertychange event.\n   * @private\n   */\n  handleMapPropertyChange_(event) {\n    if (event.key === MapProperty.VIEW) {\n      const oldView = /** @type {import(\"../View.js\").default} */ (\n        event.oldValue\n      );\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      const newView = this.getMap().getView();\n      this.bindView_(newView);\n    } else if (\n      !this.ovmap_.isRendered() &&\n      (event.key === MapProperty.TARGET || event.key === MapProperty.SIZE)\n    ) {\n      this.ovmap_.updateSize();\n    }\n  }\n\n  /**\n   * Register listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  bindView_(view) {\n    if (!this.view_) {\n      // Unless an explicit view definition was given, derive default from whatever main map uses.\n      const newView = new View({\n        projection: view.getProjection(),\n      });\n      this.ovmap_.setView(newView);\n    }\n\n    view.addChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n    // Sync once with the new view\n    this.handleRotationChanged_();\n  }\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {import(\"../View.js\").default} view The view.\n   * @private\n   */\n  unbindView_(view) {\n    view.removeChangeListener(\n      ViewProperty.ROTATION,\n      this.boundHandleRotationChanged_\n    );\n  }\n\n  /**\n   * Handle rotation changes to the main map.\n   * @private\n   */\n  handleRotationChanged_() {\n    if (this.rotateWithView_) {\n      this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n    }\n  }\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  validateExtent_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    if (this.viewExtent_ && equalsExtent(extent, this.viewExtent_)) {\n      // repeats of the same extent may indicate constraint conflicts leading to an endless cycle\n      return;\n    }\n    this.viewExtent_ = extent;\n\n    const ovmapSize = /** @type {import(\"../size.js\").Size} */ (\n      ovmap.getSize()\n    );\n\n    const ovview = ovmap.getView();\n    const ovextent = ovview.calculateExtentInternal(ovmapSize);\n\n    const topLeftPixel = ovmap.getPixelFromCoordinateInternal(\n      getTopLeft(extent)\n    );\n    const bottomRightPixel = ovmap.getPixelFromCoordinateInternal(\n      getBottomRight(extent)\n    );\n\n    const boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    const boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    const ovmapWidth = ovmapSize[0];\n    const ovmapHeight = ovmapSize[1];\n\n    if (\n      boxWidth < ovmapWidth * MIN_RATIO ||\n      boxHeight < ovmapHeight * MIN_RATIO ||\n      boxWidth > ovmapWidth * MAX_RATIO ||\n      boxHeight > ovmapHeight * MAX_RATIO\n    ) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  }\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  resetExtent_() {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n    const extent = view.calculateExtentInternal(mapSize);\n\n    const ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    const steps = Math.log(MAX_RATIO / MIN_RATIO) / Math.LN2;\n    const ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fitInternal(polygonFromExtent(extent));\n  }\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  recenter_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    ovview.setCenterInternal(view.getCenterInternal());\n  }\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  updateBox_() {\n    const map = this.getMap();\n    const ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    const mapSize = /** @type {import(\"../size.js\").Size} */ (map.getSize());\n\n    const view = map.getView();\n\n    const ovview = ovmap.getView();\n\n    const rotation = this.rotateWithView_ ? 0 : -view.getRotation();\n\n    const overlay = this.boxOverlay_;\n    const box = this.boxOverlay_.getElement();\n    const center = view.getCenterInternal();\n    const resolution = view.getResolution();\n    const ovresolution = ovview.getResolution();\n    const width = (mapSize[0] * resolution) / ovresolution;\n    const height = (mapSize[1] * resolution) / ovresolution;\n\n    // set position using center coordinates\n    overlay.setPosition(center);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = width + 'px';\n      box.style.height = height + 'px';\n      const transform = 'rotate(' + rotation + 'rad)';\n      box.style.transform = transform;\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateBoxAfterOvmapIsRendered_() {\n    if (this.ovmapPostrenderKey_) {\n      return;\n    }\n    this.ovmapPostrenderKey_ = listenOnce(\n      this.ovmap_,\n      MapEventType.POSTRENDER,\n      function (event) {\n        delete this.ovmapPostrenderKey_;\n        this.updateBox_();\n      },\n      this\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    const ovmap = this.ovmap_;\n    if (!this.collapsed_) {\n      if (ovmap.isRendered()) {\n        this.viewExtent_ = undefined;\n        ovmap.render();\n        return;\n      }\n      ovmap.updateSize();\n      this.resetExtent_();\n      this.updateBoxAfterOvmapIsRendered_();\n    }\n  }\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Return `true` if the overview map view can rotate, `false` otherwise.\n   * @return {boolean} True if the control view can rotate.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Set whether the overview map view should rotate with the main map view.\n   * @param {boolean} rotateWithView True if the control view should rotate.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    if (this.rotateWithView_ === rotateWithView) {\n      return;\n    }\n    this.rotateWithView_ = rotateWithView;\n    if (this.getMap().getView().getRotation() !== 0) {\n      if (this.rotateWithView_) {\n        this.handleRotationChanged_();\n      } else {\n        this.ovmap_.getView().setRotation(0);\n      }\n      this.viewExtent_ = undefined;\n      this.validateExtent_();\n      this.updateBox_();\n    }\n  }\n\n  /**\n   * Return the overview map.\n   * @return {import(\"../Map.js\").default} Overview map.\n   * @api\n   */\n  getOverviewMap() {\n    return this.ovmap_;\n  }\n\n  /**\n   * Update the overview map element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.validateExtent_();\n    this.updateBox_();\n  }\n}\n\nexport default OverviewMap;\n","/**\n * @module ol/control/ScaleLine\n */\nimport Control from './Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {METERS_PER_UNIT, getPointResolution} from '../proj.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @type {string}\n */\nconst UNITS_PROP = 'units';\n\n/**\n * @typedef {'degrees' | 'imperial' | 'nautical' | 'metric' | 'us'} Units\n * Units for the scale line.\n */\n\n/**\n * @const\n * @type {Array<number>}\n */\nconst LEADING_DIGITS = [1, 2, 5];\n\n/**\n * @const\n * @type {number}\n */\nconst DEFAULT_DPI = 25.4 / 0.28;\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:units', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |'change:units', Return>} ScaleLineOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className] CSS class name. The default is `ol-scale-bar` when configured with\n * `bar: true`. Otherwise the default is `ol-scale-line`.\n * @property {number} [minWidth=64] Minimum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {number} [maxWidth] Maximum width in pixels at the OGC default dpi. The width will be\n * adjusted to match the dpi used.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {Units} [units='metric'] Units.\n * @property {boolean} [bar=false] Render scalebars instead of a line.\n * @property {number} [steps=4] Number of steps the scalebar should use. Use even numbers\n * for best results. Only applies when `bar` is `true`.\n * @property {boolean} [text=false] Render the text scale above of the scalebar. Only applies\n * when `bar` is `true`.\n * @property {number|undefined} [dpi=undefined] dpi of output device such as printer. Only applies\n * when `bar` is `true`. If undefined the OGC default screen pixel size of 0.28mm will be assumed.\n */\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n * When specifying `bar` as `true`, a scalebar will be rendered instead\n * of a scaleline.\n *\n * @api\n */\nclass ScaleLine extends Control {\n  /**\n   * @param {Options} [options] Scale line options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.style.pointerEvents = 'none';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ScaleLineOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ScaleLineOnSignature<void>}\n     */\n    this.un;\n\n    const className =\n      options.className !== undefined\n        ? options.className\n        : options.bar\n        ? 'ol-scale-bar'\n        : 'ol-scale-line';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?import(\"../View.js\").State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.maxWidth_ = options.maxWidth;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    this.addChangeListener(UNITS_PROP, this.handleUnitsChanged_);\n\n    this.setUnits(options.units || 'metric');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBar_ = options.bar || false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scaleBarSteps_ = options.steps || 4;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.scaleBarText_ = options.text || false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.dpi_ = options.dpi || undefined;\n  }\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {Units} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  getUnits() {\n    return this.get(UNITS_PROP);\n  }\n\n  /**\n   * @private\n   */\n  handleUnitsChanged_() {\n    this.updateElement_();\n  }\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  setUnits(units) {\n    this.set(UNITS_PROP, units);\n  }\n\n  /**\n   * Specify the dpi of output device such as printer.\n   * @param {number|undefined} dpi The dpi of output device.\n   * @api\n   */\n  setDpi(dpi) {\n    this.dpi_ = dpi;\n  }\n\n  /**\n   * @private\n   */\n  updateElement_() {\n    const viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const center = viewState.center;\n    const projection = viewState.projection;\n    const units = this.getUnits();\n    const pointResolutionUnits = units == 'degrees' ? 'degrees' : 'm';\n    let pointResolution = getPointResolution(\n      projection,\n      viewState.resolution,\n      center,\n      pointResolutionUnits\n    );\n\n    const minWidth =\n      (this.minWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI;\n\n    const maxWidth =\n      this.maxWidth_ !== undefined\n        ? (this.maxWidth_ * (this.dpi_ || DEFAULT_DPI)) / DEFAULT_DPI\n        : undefined;\n\n    let nominalCount = minWidth * pointResolution;\n    let suffix = '';\n    if (units == 'degrees') {\n      const metersPerDegree = METERS_PER_UNIT.degrees;\n      nominalCount *= metersPerDegree;\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == 'imperial') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == 'nautical') {\n      pointResolution /= 1852;\n      suffix = 'NM';\n    } else if (units == 'metric') {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == 'us') {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    let i = 3 * Math.floor(Math.log(minWidth * pointResolution) / Math.log(10));\n    let count, width, decimalCount;\n    let previousCount, previousWidth, previousDecimalCount;\n    while (true) {\n      decimalCount = Math.floor(i / 3);\n      const decimal = Math.pow(10, decimalCount);\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] * decimal;\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n        return;\n      }\n      if (maxWidth !== undefined && width >= maxWidth) {\n        count = previousCount;\n        width = previousWidth;\n        decimalCount = previousDecimalCount;\n        break;\n      } else if (width >= minWidth) {\n        break;\n      }\n      previousCount = count;\n      previousWidth = width;\n      previousDecimalCount = decimalCount;\n      ++i;\n    }\n    const html = this.scaleBar_\n      ? this.createScaleBar(width, count, suffix)\n      : count.toFixed(decimalCount < 0 ? -decimalCount : 0) + ' ' + suffix;\n\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} width The current width of the scalebar.\n   * @param {number} scale The current scale.\n   * @param {string} suffix The suffix to append to the scale text.\n   * @return {string} The stringified HTML of the scalebar.\n   */\n  createScaleBar(width, scale, suffix) {\n    const resolutionScale = this.getScaleForResolution();\n    const mapScale =\n      resolutionScale < 1\n        ? Math.round(1 / resolutionScale).toLocaleString() + ' : 1'\n        : '1 : ' + Math.round(resolutionScale).toLocaleString();\n    const steps = this.scaleBarSteps_;\n    const stepWidth = width / steps;\n    const scaleSteps = [this.createMarker('absolute')];\n    for (let i = 0; i < steps; ++i) {\n      const cls =\n        i % 2 === 0 ? 'ol-scale-singlebar-odd' : 'ol-scale-singlebar-even';\n      scaleSteps.push(\n        '<div>' +\n          '<div ' +\n          `class=\"ol-scale-singlebar ${cls}\" ` +\n          `style=\"width: ${stepWidth}px;\"` +\n          '>' +\n          '</div>' +\n          this.createMarker('relative') +\n          // render text every second step, except when only 2 steps\n          (i % 2 === 0 || steps === 2\n            ? this.createStepText(i, width, false, scale, suffix)\n            : '') +\n          '</div>'\n      );\n    }\n    // render text at the end\n    scaleSteps.push(this.createStepText(steps, width, true, scale, suffix));\n\n    const scaleBarText = this.scaleBarText_\n      ? `<div class=\"ol-scale-text\" style=\"width: ${width}px;\">` +\n        mapScale +\n        '</div>'\n      : '';\n    return scaleBarText + scaleSteps.join('');\n  }\n\n  /**\n   * Creates a marker at given position\n   * @param {'absolute'|'relative'} position The position, absolute or relative\n   * @return {string} The stringified div containing the marker\n   */\n  createMarker(position) {\n    const top = position === 'absolute' ? 3 : -10;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-marker\" ' +\n      `style=\"position: ${position}; top: ${top}px;\"` +\n      '></div>'\n    );\n  }\n\n  /**\n   * Creates the label for a marker marker at given position\n   * @param {number} i The iterator\n   * @param {number} width The width the scalebar will currently use\n   * @param {boolean} isLast Flag indicating if we add the last step text\n   * @param {number} scale The current scale for the whole scalebar\n   * @param {string} suffix The suffix for the scale\n   * @return {string} The stringified div containing the step text\n   */\n  createStepText(i, width, isLast, scale, suffix) {\n    const length =\n      i === 0 ? 0 : Math.round((scale / this.scaleBarSteps_) * i * 100) / 100;\n    const lengthString = length + (i === 0 ? '' : ' ' + suffix);\n    const margin = i === 0 ? -3 : (width / this.scaleBarSteps_) * -1;\n    const minWidth = i === 0 ? 0 : (width / this.scaleBarSteps_) * 2;\n    return (\n      '<div ' +\n      'class=\"ol-scale-step-text\" ' +\n      'style=\"' +\n      `margin-left: ${margin}px;` +\n      `text-align: ${i === 0 ? 'left' : 'center'};` +\n      `min-width: ${minWidth}px;` +\n      `left: ${isLast ? width + 'px' : 'unset'};` +\n      '\">' +\n      lengthString +\n      '</div>'\n    );\n  }\n\n  /**\n   * Returns the appropriate scale for the given resolution and units.\n   * @return {number} The appropriate scale.\n   */\n  getScaleForResolution() {\n    const resolution = getPointResolution(\n      this.viewState_.projection,\n      this.viewState_.resolution,\n      this.viewState_.center,\n      'm'\n    );\n    const dpi = this.dpi_ || DEFAULT_DPI;\n    const inchesPerMeter = 1000 / 25.4;\n    return resolution * inchesPerMeter * dpi;\n  }\n\n  /**\n   * Update the scale line element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.viewState_ = null;\n    } else {\n      this.viewState_ = frameState.viewState;\n    }\n    this.updateElement_();\n  }\n}\n\nexport default ScaleLine;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/control/ZoomToExtent\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {import(\"../extent.js\").Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nclass ZoomToExtent extends Control {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    /**\n     * @type {?import(\"../extent.js\").Extent|null}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    const label = options.label !== undefined ? options.label : 'E';\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    const button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  }\n\n  /**\n   * @protected\n   */\n  handleZoomToExtent() {\n    const map = this.getMap();\n    const view = map.getView();\n    const extent = !this.extent\n      ? view.getProjection().getExtent()\n      : this.extent;\n    view.fitInternal(polygonFromExtent(extent));\n  }\n}\n\nexport default ZoomToExtent;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {TRUE} from '../functions.js';\nimport {get as getProjection, getUserProjection} from '../proj.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default|import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors\n * (and/or formats pre-constructed with options).\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nexport class DragAndDropEvent extends Event {\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>} [features] Features.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   */\n  constructor(type, file, features, projection) {\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = projection;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'addfeatures', DragAndDropEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'addfeatures', Return>} DragAndDropOnSignature\n */\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n *\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      handleEvent: TRUE,\n    });\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragAndDropOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragAndDropOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.readAsBuffer_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../format/Feature.js\").default>}\n     */\n    this.formats_ = [];\n    const formatConstructors = options.formatConstructors\n      ? options.formatConstructors\n      : [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      let format = formatConstructors[i];\n      if (typeof format === 'function') {\n        format = new format();\n      }\n      this.formats_.push(format);\n      this.readAsBuffer_ =\n        this.readAsBuffer_ || format.getType() === 'arraybuffer';\n    }\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection\n      ? getProjection(options.projection)\n      : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.target = options.target ? options.target : null;\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      projection = getUserProjection();\n      if (!projection) {\n        const view = map.getView();\n        projection = view.getProjection();\n      }\n    }\n\n    let text;\n    const formats = this.formats_;\n    for (let i = 0, ii = formats.length; i < ii; ++i) {\n      const format = formats[i];\n      let input = result;\n      if (this.readAsBuffer_ && format.getType() !== 'arraybuffer') {\n        if (text === undefined) {\n          text = new TextDecoder().decode(result);\n        }\n        input = text;\n      }\n      const features = this.tryReadFeatures_(format, input, {\n        featureProjection: projection,\n      });\n      if (features && features.length > 0) {\n        if (this.source_) {\n          this.source_.clear();\n          this.source_.addFeatures(features);\n        }\n        this.dispatchEvent(\n          new DragAndDropEvent(\n            DragAndDropEventType.ADD_FEATURES,\n            file,\n            features,\n            projection\n          )\n        );\n        break;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, this.handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, this.handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, this.handleStop, this),\n        listen(dropArea, EventType.DROP, this.handleStop, this),\n      ];\n    }\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return (\n        /** @type {Array<import(\"../Feature.js\").default>} */\n        (format.readFeatures(text, options))\n      );\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleDrop(event) {\n    const files = event.dataTransfer.files;\n    for (let i = 0, ii = files.length; i < ii; ++i) {\n      const file = files.item(i);\n      const reader = new FileReader();\n      reader.addEventListener(\n        EventType.LOAD,\n        this.handleResult_.bind(this, file)\n      );\n      if (this.readAsBuffer_) {\n        reader.readAsArrayBuffer(file);\n      } else {\n        reader.readAsText(file);\n      }\n    }\n  }\n\n  /**\n   * @param {DragEvent} event Event.\n   */\n  handleStop(event) {\n    event.stopPropagation();\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'copy';\n  }\n}\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport PointerInteraction from './Pointer.js';\nimport {mouseOnly, shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/source/BingMaps\n */\n\nimport TileImage from './TileImage.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {createOrUpdate} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\n\n/**\n * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  const z = tileCoord[0];\n  const digits = new Array(z);\n  let mask = 1 << (z - 1);\n  let i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n/**\n * The attribution containing a link to the Microsoft® Bing™ Maps Platform APIs’\n * Terms Of Use.\n * @const\n * @type {string}\n */\nconst TOS_ATTRIBUTION =\n  '<a class=\"ol-attribution-bing-tos\" ' +\n  'href=\"https://www.microsoft.com/maps/product/terms.html\" target=\"_blank\">' +\n  'Terms of Use</a>';\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {boolean} [hidpi=false] If `true` hidpi tiles will be requested.\n * @property {string} [culture='en-us'] Culture code.\n * @property {string} key Bing Maps API key. Get yours at https://www.bingmapsportal.com/.\n * @property {string} imagerySet Type of imagery.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=21] Max zoom. Default is what's advertized by the BingMaps service.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n * @property {boolean} placeholderTiles Whether to show BingMaps placeholder tiles when zoomed past the maximum level provided in an area. When `false`, requests beyond\n * the maximum zoom level will return no tile. When `true`, the placeholder tile will be returned.\n */\n\n/**\n * @typedef {Object} BingMapsImageryMetadataResponse\n * @property {number} statusCode The response status code\n * @property {string} statusDescription The response status description\n * @property {string} authenticationResultCode The authentication result code\n * @property {Array<ResourceSet>} resourceSets The array of resource sets\n */\n\n/**\n * @typedef {Object} ResourceSet\n * @property {Array<Resource>} resources Resources.\n */\n\n/**\n * @typedef {Object} Resource\n * @property {number} imageHeight The image height\n * @property {number} imageWidth The image width\n * @property {number} zoomMin The minimum zoom level\n * @property {number} zoomMax The maximum zoom level\n * @property {string} imageUrl The image URL\n * @property {Array<string>} imageUrlSubdomains The image URL subdomains for rotation\n * @property {Array<ImageryProvider>} [imageryProviders] The array of ImageryProviders\n */\n\n/**\n * @typedef {Object} ImageryProvider\n * @property {Array<CoverageArea>} coverageAreas The coverage areas\n * @property {string} [attribution] The attribution\n */\n\n/**\n * @typedef {Object} CoverageArea\n * @property {number} zoomMin The minimum zoom\n * @property {number} zoomMax The maximum zoom\n * @property {Array<number>} bbox The coverage bounding box\n */\n\n/**\n * @classdesc\n * Layer source for Bing Maps tile data.\n * @api\n */\nclass BingMaps extends TileImage {\n  /**\n   * @param {Options} options Bing Maps options.\n   */\n  constructor(options) {\n    const hidpi = options.hidpi !== undefined ? options.hidpi : false;\n\n    super({\n      cacheSize: options.cacheSize,\n      crossOrigin: 'anonymous',\n      interpolate: options.interpolate,\n      opaque: true,\n      projection: getProjection('EPSG:3857'),\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      state: 'loading',\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: hidpi ? 2 : 1,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = hidpi;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.culture_ = options.culture !== undefined ? options.culture : 'en-us';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxZoom_ = options.maxZoom !== undefined ? options.maxZoom : -1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.apiKey_ = options.key;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.imagerySet_ = options.imagerySet;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.placeholderTiles_ = options.placeholderTiles;\n\n    const url =\n      'https://dev.virtualearth.net/REST/v1/Imagery/Metadata/' +\n      this.imagerySet_ +\n      '?uriScheme=https&include=ImageryProviders&key=' +\n      this.apiKey_ +\n      '&c=' +\n      this.culture_;\n\n    fetch(url)\n      .then((response) => response.json())\n      .then((json) => this.handleImageryMetadataResponse(json));\n  }\n\n  /**\n   * Get the api key used for this source.\n   *\n   * @return {string} The api key.\n   * @api\n   */\n  getApiKey() {\n    return this.apiKey_;\n  }\n\n  /**\n   * Get the imagery set associated with this source.\n   *\n   * @return {string} The imagery set.\n   * @api\n   */\n  getImagerySet() {\n    return this.imagerySet_;\n  }\n\n  /**\n   * @param {BingMapsImageryMetadataResponse} response Response.\n   */\n  handleImageryMetadataResponse(response) {\n    if (\n      response.statusCode != 200 ||\n      response.statusDescription != 'OK' ||\n      response.authenticationResultCode != 'ValidCredentials' ||\n      response.resourceSets.length != 1 ||\n      response.resourceSets[0].resources.length != 1\n    ) {\n      this.setState('error');\n      return;\n    }\n\n    const resource = response.resourceSets[0].resources[0];\n    const maxZoom = this.maxZoom_ == -1 ? resource.zoomMax : this.maxZoom_;\n\n    const sourceProjection = this.getProjection();\n    const extent = extentFromProjection(sourceProjection);\n    const scale = this.hidpi_ ? 2 : 1;\n    const tileSize =\n      resource.imageWidth == resource.imageHeight\n        ? resource.imageWidth / scale\n        : [resource.imageWidth / scale, resource.imageHeight / scale];\n\n    const tileGrid = createXYZ({\n      extent: extent,\n      minZoom: resource.zoomMin,\n      maxZoom: maxZoom,\n      tileSize: tileSize,\n    });\n    this.tileGrid = tileGrid;\n\n    const culture = this.culture_;\n    const hidpi = this.hidpi_;\n    const placeholderTiles = this.placeholderTiles_;\n    this.tileUrlFunction = createFromTileUrlFunctions(\n      resource.imageUrlSubdomains.map(function (subdomain) {\n        /** @type {import('../tilecoord.js').TileCoord} */\n        const quadKeyTileCoord = [0, 0, 0];\n        const imageUrl = resource.imageUrl\n          .replace('{subdomain}', subdomain)\n          .replace('{culture}', culture);\n        return (\n          /**\n           * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n           * @param {number} pixelRatio Pixel ratio.\n           * @param {import(\"../proj/Projection.js\").default} projection Projection.\n           * @return {string|undefined} Tile URL.\n           */\n          function (tileCoord, pixelRatio, projection) {\n            if (!tileCoord) {\n              return undefined;\n            }\n            createOrUpdate(\n              tileCoord[0],\n              tileCoord[1],\n              tileCoord[2],\n              quadKeyTileCoord\n            );\n            const url = new URL(\n              imageUrl.replace('{quadkey}', quadKey(quadKeyTileCoord))\n            );\n            const params = url.searchParams;\n            if (hidpi) {\n              params.set('dpi', 'd1');\n              params.set('device', 'mobile');\n            }\n            if (placeholderTiles === true) {\n              params.delete('n');\n            } else if (placeholderTiles === false) {\n              params.set('n', 'z');\n            }\n            return url.toString();\n          }\n        );\n      })\n    );\n\n    if (resource.imageryProviders) {\n      const transform = getTransformFromProjections(\n        getProjection('EPSG:4326'),\n        this.getProjection()\n      );\n\n      this.setAttributions((frameState) => {\n        const attributions = [];\n        const viewState = frameState.viewState;\n        const tileGrid = this.getTileGrid();\n        const z = tileGrid.getZForResolution(\n          viewState.resolution,\n          this.zDirection\n        );\n        const tileCoord = tileGrid.getTileCoordForCoordAndZ(\n          viewState.center,\n          z\n        );\n        const zoom = tileCoord[0];\n        resource.imageryProviders.map(function (imageryProvider) {\n          let intersecting = false;\n          const coverageAreas = imageryProvider.coverageAreas;\n          for (let i = 0, ii = coverageAreas.length; i < ii; ++i) {\n            const coverageArea = coverageAreas[i];\n            if (zoom >= coverageArea.zoomMin && zoom <= coverageArea.zoomMax) {\n              const bbox = coverageArea.bbox;\n              const epsg4326Extent = [bbox[1], bbox[0], bbox[3], bbox[2]];\n              const extent = applyTransform(epsg4326Extent, transform);\n              if (intersects(extent, frameState.extent)) {\n                intersecting = true;\n                break;\n              }\n            }\n          }\n          if (intersecting) {\n            attributions.push(imageryProvider.attribution);\n          }\n        });\n\n        attributions.push(TOS_ATTRIBUTION);\n        return attributions;\n      });\n    }\n\n    this.setState('ready');\n  }\n}\n\nexport default BingMaps;\n","import \"./style.css\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport XYZ from \"ol/source/XYZ\";\nimport OSM from \"ol/source/OSM.js\";\n\nimport {\n  always,\n  noModifierKeys,\n  altKeyOnly,\n  altShiftKeysOnly,\n  platformModifierKeyOnly,\n  primaryAction,\n  shiftKeyOnly,\n} from \"ol/events/condition\";\n\nimport { defaults } from \"ol/control/defaults\";\nimport Zoom from \"ol/control/Zoom.js\";\nimport Attribution from \"ol/control/Attribution.js\";\nimport FullScreen from \"ol/control/FullScreen.js\";\nimport Rotate from \"ol/control/Rotate.js\";\nimport MousePosition from \"ol/control/MousePosition.js\";\nimport OverviewMap from \"ol/control/OverviewMap.js\";\nimport ScaleLine from \"ol/control/ScaleLine.js\";\nimport ZoomSlider from \"ol/control/ZoomSlider.js\";\nimport ZoomToExtent from \"ol/control/ZoomToExtent.js\";\n\nimport { defaults as defaultsInteraction } from \"ol/interaction/defaults\";\nimport DoubleClickZoom from \"ol/interaction/DoubleClickZoom.js\";\nimport DragAndDrop from \"ol/interaction/DragAndDrop.js\";\nimport DragRotate from \"ol/interaction/DragRotate.js\";\nimport DragRotateAndZoom from \"ol/interaction/DragRotateAndZoom.js\";\nimport DragZoom from \"ol/interaction/DragZoom.js\";\nimport KeyboardPan from \"ol/interaction/KeyboardPan.js\";\nimport KeyboardZoom from \"ol/interaction/KeyboardZoom.js\";\nimport MouseWheelZoom from \"ol/interaction/MouseWheelZoom.js\";\nimport PinchRotate from \"ol/interaction/PinchRotate.js\";\nimport PinchZoom from \"ol/interaction/PinchZoom.js\";\nimport DragPan from \"ol/interaction/DragPan.js\";\n\nimport BingMaps from \"ol/source/BingMaps.js\";\n\nexport async function show(m) {\n  let layers = [];\n\n  if (m.layer)\n    for (const [id, layer] of Object.entries(m.layer)) {\n      const source = m.source[id];\n      if (layer.class === \"TileLayer\") {\n        let l = new TileLayer(layer.options);\n\n        switch (source.class) {\n          case \"XYZ\":\n            l.setSource(new XYZ(source.options));\n            break;\n\n          case \"OSM\":\n            l.setSource(new OSM(source.options));\n            break;\n\n          case \"BingMaps\":\n            l.setSource(new BingMaps(source.options));\n            break;\n\n          default:\n            break;\n        }\n\n        layers.push(l);\n      }\n    }\n\n  const map = new Map({\n    controls: defaults({\n      zoom: false,\n      attribution: false,\n      rotate: false,\n    }),\n    interactions: defaultsInteraction({\n      altShiftDragRotate: false,\n      shiftDragZoom: false,\n      doubleClickZoom: false,\n      dragAndDrop: false,\n      keyboard: false,\n      mouseWheelZoom: false,\n      dragPan: false,\n      pinchRotate: false,\n      pinchZoom: false,\n    }),\n    target: m.id,\n    layers: layers,\n    view: new View(m.view.options),\n  });\n\n  if (m.control)\n    for (const c of Object.values(m.control)) {\n      switch (c.class) {\n        case \"Attribution\":\n          if (c.options.collapsible)\n            c.options.collapsible = c.options.collapsible === \"true\";\n\n          map.addControl(new Attribution(c.options));\n          break;\n        case \"FullScreen\":\n          map.addControl(new FullScreen(c.options));\n          break;\n        case \"MousePosition\":\n          map.addControl(new MousePosition(c.options));\n          break;\n        case \"OverviewMap\":\n          map.addControl(new OverviewMap(c.options));\n          break;\n        case \"Rotate\":\n          map.addControl(new Rotate(c.options));\n          break;\n        case \"ScaleLine\":\n          map.addControl(new ScaleLine(c.options));\n          break;\n        case \"Zoom\":\n          map.addControl(new Zoom(c.options));\n          break;\n        case \"ZoomSlider\":\n          map.addControl(new ZoomSlider(c.options));\n          break;\n        case \"ZoomToExtent\":\n          map.addControl(new ZoomToExtent(c.options));\n          break;\n        default:\n          break;\n      }\n    }\n\n  const c = {\n    always: always,\n    noModifierKeys: noModifierKeys,\n    altKeyOnly: altKeyOnly,\n    altShiftKeysOnly: altShiftKeysOnly,\n    platformModifierKeyOnly: platformModifierKeyOnly,\n    primaryAction: primaryAction,\n    shiftKeyOnly: shiftKeyOnly,\n  };\n\n  if (m.interaction)\n    for (const i of Object.values(m.interaction)) {\n      if (i.options === undefined) i.options = {};\n\n      i.options.condition = c[i.options.condition];\n\n      switch (i.class) {\n        case \"DoubleClickZoom\":\n          map.addInteraction(new DoubleClickZoom(i.options));\n          break;\n        case \"DragAndDrop\":\n          map.addInteraction(new DragAndDrop(i.options));\n          break;\n        case \"DragPan\":\n          map.addInteraction(new DragPan(i.options));\n          break;\n        case \"DragRotate\":\n          map.addInteraction(new DragRotate(i.options));\n          break;\n        case \"DragRotateAndZoom\":\n          map.addInteraction(new DragRotateAndZoom(i.options));\n          break;\n        case \"DragZoom\":\n          map.addInteraction(new DragZoom(i.options));\n          break;\n        case \"KeyboardPan\":\n          map.addInteraction(new KeyboardPan(i.options));\n          break;\n        case \"KeyboardZoom\":\n          map.addInteraction(new KeyboardZoom(i.options));\n          break;\n        case \"MouseWheelZoom\":\n          map.addInteraction(new MouseWheelZoom(i.options));\n          break;\n        case \"PinchRotate\":\n          map.addInteraction(new PinchRotate(i.options));\n          break;\n        case \"PinchZoom\":\n          map.addInteraction(new PinchZoom(i.options));\n          break;\n        default:\n          break;\n      }\n    }\n\n  // </editor-fold>\n\n  if (m.marker)\n    for (const mr of Object.values(m.marker)) {\n      const point = mr.point;\n\n      const { default: getMarker } = await import(\"./marker.js\");\n\n      const getImgHeight = (src) => {\n        return new Promise((resolve, reject) => {\n          const img = new Image();\n          img.onload = () => resolve(img.naturalHeight);\n          img.onerror = (err) => reject(err);\n          img.src = src;\n        });\n      };\n\n      const marker = getMarker(point, mr.img, await getImgHeight(mr.img));\n\n      map.addLayer(marker);\n    }\n}\n"],"names":["inProgress","dataWebpackPrefix","messages","AssertionError","Error","constructor","code","message","super","this","name","Property","CollectionEvent","type","element","index","Collection","array","options","on","once","un","unique_","unique","array_","i","ii","length","assertUnique_","updateLength_","clear","getLength","pop","extend","arr","push","forEach","f","getArray","item","get","insertAt","elem","splice","dispatchEvent","ADD","removeAt","n","remove","prev","REMOVE","setAt","set","except","disposed","dispose","disposeInternal","listenImage","image","loadHandler","errorHandler","img","listening","decoding","loaded","listenerKeys","LOAD","src","decode","then","catch","error","ERROR","IDLE","LOADING","LOADED","EMPTY","ObjectEvent","key","oldValue","BaseObject","values","values_","undefined","setProperties","value","hasOwnProperty","getKeys","Object","keys","getProperties","assign","hasProperties","notify","eventType","hasListener","PROPERTYCHANGE","addChangeListener","listener","addEventListener","removeChangeListener","removeEventListener","silent","applyProperties","source","unset","Observable","revision_","changed","CHANGE","getRevision","onInternal","Array","isArray","len","onceInternal","ol_key","unInternal","unByKey","prototype","createExtent","extent","onlyCenter","smooth","center","resolution","size","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","x","y","ratio","Math","log","max","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","min","getSmoothClampedResolution","maxResolution","minResolution","result","createMinMaxResolution","direction","cappedMaxRes","View","hints_","animations_","updateAnimationKey_","projection_","projection","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","properties","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","multiWorld","smoothResolutionConstraint","projExtent","getExtent","constrainOnlyCenter","isGlobal","resolutions","constrainResolution","capped","z","floor","createSnapToResolutions","defaultMaxResolution","degrees","getMetersPerUnit","pow","defaultMinResolution","defaultMaxZoom","power","tolerance","minZoomLevel","ceil","offset","cappedZoomLevel","zoomLevel","newResolution","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","slice","Infinity","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createRotationConstraint","constraints_","rotation","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","args","arguments","getProjection","anchor","animateInternal","apply","callback","animationCount","state","animationCallback","start","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","PI","targetRotation","isNoopAnimation","setHint","ViewHint","ANIMATING","updateAnimations_","getInteracting","INTERACTING","cancelAnimations","j","jj","NaN","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","x0","y0","x1","y1","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","bind","currentCenter","currentResolution","w","h","abs","cos","sin","setViewportSize","getCenter","CENTER","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","enabled","RESOLUTION","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","ROTATION","getValueForResolutionFunction","logPower","getState","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","geometry","getType","rotate","userProjection","clone","transform","fitInternal","rotatedExtentForGeometry","cosAngle","sinAngle","coords","getFlatCoordinates","stride","getStride","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","isNaN","centerRot","centerX","centerY","getConstrainedCenter","centerOn","coordinate","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","ascending","a","b","linearFindNearest","target","candidate","reverseSubArray","begin","end","tmp","data","extension","equals","arr1","arr2","len1","isSorted","func","strict","compare","every","currentVal","res","assert","assertion","errorCode","HEX_COLOR_RE_","NAMED_COLOR_RE_","asString","color","toString","fromString","cache","cacheSize","s","r","g","exec","el","document","createElement","style","body","appendChild","rgb","getComputedStyle","removeChild","fromNamed","d","hasAlpha","parseInt","substr","startsWith","split","map","Number","normalize","fromStringInternal_","asArray","round","levels","info","warn","level","console","add","coordinate1","coordinate2","angle","scale","wrapX","canWrapX","worldWidth","worldsAway","sourceExtentWidth","projectionExtent","getWorldsAway","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","join","fontRegExMatchIndex","getFontParameters","fontSpec","match","lineHeight","weight","variant","families","family","createCanvasContext2D","width","height","canvasPool","settings","canvas","shift","OffscreenCanvas","getContext","releaseCanvas","context","clearRect","outerWidth","offsetWidth","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","replaceChildren","children","oldChildren","childNodes","oldChild","newChild","insertBefore","easeIn","t","easeOut","inAndOut","linear","listen","thisArg","originalListener","eventsKey","listenOnce","unlistenByKey","stopPropagation","evt","propagationStopped","defaultPrevented","preventDefault","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","RESIZE","TOUCHMOVE","WHEEL","Target","eventTarget_","pendingRemovals_","dispatching_","listeners_","listeners","listenersForType","includes","event","isString","dispatching","pendingRemovals","propagate","handleEvent","call","pr","getListeners","indexOf","boundingExtent","coordinates","extendCoordinate","buffer","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","extendFlatCoordinates","extendXY","forEachCorner","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","isEmpty","getWidth","getHeight","getCorner","corner","getForViewAndSize","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","returnOrUpdate","scaleFromCenter","deltaX","deltaY","intersectsSegment","startRel","endRel","startX","startY","endX","endY","slope","applyTransform","transformFn","stops","xs","ys","l","_boundingExtentXYs","wrapAndSliceX","isFinite","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","Point","layout","setCoordinates","point","closestPointXY","closestPoint","minSquaredDistance","squaredDistance","getCoordinates","computeExtent","intersectsExtent","setLayout","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","assignClosestPoint","maxDelta","isRing","tmpPoint","sqrt","linearRing","twiceArea","LinearRing","SimpleGeometry","maxDelta_","maxDeltaRevision_","setFlatCoordinates","inflate","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","deflate","linearRingIsClockwise","edge","orientLinearRings","ends","right","isClockwise","Polygon","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","arrayMaxSquaredDelta","assignClosestArrayPoint","getOrientedFlatCoordinates","linearRings","getEnds","getFlatInteriorPoint","flatCenter","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointOfArray","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","linearRingsAreOriented","simplifiedEnds","fromExtent","tmpTransform","Geometry","extent_","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","getSimplifiedGeometry","simplifyTransformed","coord","getClosestPoint","intersectsCoordinate","sx","sy","simplify","translate","destination","sourceProj","getUnits","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","getStrideForLayout","transformGeom2D","simpleGeometry","getFirstCoordinate","getLastCoordinate","getLayout","simplifiedGeometry","nesting","getLayoutForStride","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","coordinatess","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","endss","coordinatesss","intersectsLineString","coordinatesExtent","ret","point1","point2","intersectsLinearRing","intersectsLinearRingArray","douglasPeucker","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","snap","quantize","dx1","dy1","dx2","dy2","quantizeArray","transform2D","anchorX","anchorY","k","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","test","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","self","IMAGE_DECODE","Image","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","BaseLayer","background_","background","OPACITY","opacity","VISIBLE","visible","Z_INDEX","zIndex","MAX_RESOLUTION","MIN_RESOLUTION","MIN_ZOOM","MAX_ZOOM","className_","className","state_","getBackground","getClassName","getLayerState","managed","layer","getZIndex","getOpacity","getVisible","getLayersArray","getLayerStatesArray","states","EXTENT","getSourceState","setBackground","setExtent","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","SOURCE","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","view","frameState","getMapInternal","layerState","getView","layerStatesArray","getLayerGroup","find","layerExtent","inView","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","setMapInternal","MAP","PRECOMPOSE","some","arrayLayerState","createRenderer","hasRenderer","clamp","squaredSegmentDistance","solveLinearSystem","mat","maxRow","maxEl","absValue","coef","m","toRadians","angleInDegrees","modulo","lerp","toFixed","decimals","factor","object","property","code_","units_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getAxisOrientation","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setWorldExtent","setGetPointResolution","getPointResolutionFunc","RADIUS","HALF_SIZE","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","cosh","PROJECTIONS","EPSG4326Projection","transforms","sourceCode","destinationCode","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","input","output","identityTransform","addProjection","projectionLike","replace","pointResolution","getter","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","transformExtent","getUserProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","sourceUnits","userUnits","projections2","forwardTransform","inverseTransform","dimension","atan","exp","RenderEvent","inversePixelTransform","PRERENDER","POSTRENDER","POSTCOMPOSE","RENDERCOMPLETE","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","measureAndCacheTextWidth","reduce","curr","getTextDimensions","baseStyle","chunks","widths","heights","lineWidths","lineWidth","currentWidth","currentHeight","drawImageOrLabel","labelOrImage","originX","originY","save","globalAlpha","setTransform","contextInstructions","label","executeLabelInstructions","drawImage","restore","LayerRenderer","ready","boundHandleImageChange_","handleImageChange_","layer_","declutterExecutorGroup","loadedTileCallback","tiles","tile","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","forEachFeatureAtCoordinate","hitTolerance","matches","getLayer","handleFontsChanged","ImageState","renderIfReadyAndVisible","loadImage","imageState","EventType","load","pixelContext","container","renderedResolution","tempTransform","pixelTransform","containerReused","pixelContext_","getImageData","col","row","willReadFrequently","err","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","inverted","beginPath","moveTo","lineTo","clip","dispatchRenderEvent_","preRender","postRender","getRenderTransform","pixelRatio","createSnapToN","theta","createSnapToZero","hasArea","toSize","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","loading","wrapX_","interpolate_","interpolate","viewResolver","viewRejector","viewPromise_","reject","getAttributionsCollapsible","getWrapX","getInterpolate","refresh","setAttributions","setState","attributionLike","getKey","crossOrigin","shared","cache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","setSize","maxCacheSize","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","create","setFromArray","transform1","transform2","makeScale","c","e","compose","makeInverse","det","transformStringDiv","transformString","abstract","uidCounter_","getUid","obj","ol_uid","String","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","definition","o","enumerable","chunkId","all","promises","u","miniCssF","globalThis","Function","prop","url","script","needAttach","scripts","getElementsByTagName","getAttribute","charset","timeout","nc","setAttribute","onScriptComplete","onerror","onload","clearTimeout","doneFns","head","Symbol","toStringTag","scriptUrl","importScripts","location","currentScript","p","installedChunks","installedChunkData","promise","errorType","realSrc","request","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","runtime","id","chunkLoadingGlobal","MapRenderer","Disposable","map_","dispatchRenderEvent","calculateMatrices2D","pixelToCoordinateTransform","checkWrapped","layerFilter","thisArg2","feature","translatedCoordinate","offsets","layerStates","numLayers","tmpCoord","order","distanceSq","hasFeatureAtCoordinate","getMap","flushDeclutterItems","scheduleExpireIconCache","postRenderFunctions","expireIconCache","Map","fontChangeListenerKey_","ObjectEventType","redrawText","element_","getViewport","firstChild","children_","renderedVisible_","declutterLayers_","declutterLayers","previousElement","layerIndex","sourceState","layers","renderDeclutter","GroupEvent","LayerGroup","Base","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","CollectionEventType","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label_","activeLabel","toggleButton_","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","Set","getAllLayers","flatMap","setCollapsible","updateElement_","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","contains","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomOptions","rotateOptions","attribution","attributionOptions","Interaction","setActive","getActive","mapBrowserEvent","active","zoomByDelta","delta_","stopEvent","browserEvent","shiftKey","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","conditions","pass","altKeyOnly","altKey","metaKey","ctrlKey","altShiftKeysOnly","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","always","mouseActionButton","noModifierKeys","platformModifierKeyOnly","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","update","distance","getAngle","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","lastAngle_","getSize","RenderBox","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","getGeometry","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","pan","platformModifierKey","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","lastIndex","firstIndex","totalDelta_","lastDelta_","timeout_","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","interactions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","removeLayerMapProperty","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","overlays","MapProperty","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","pixelRatio_","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overflow","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","getId","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","renderer","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","ShadowRoot","host","Composite","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","declutterTree","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","parseFloat","getClientRects","oldSize","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","TileProperty","getUseInterimTilesOnError","Tile","interimTile","transition_","transition","transitionStarts_","release","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","inTransition","endTransition","tileLoadFunction","crossOrigin_","src_","image_","unlisten_","tileLoadFunction_","getImage","setImage","unlistenImage_","handleImageError_","ctx","fillStyle","fillRect","getBlankImage","handleImageLoad_","naturalWidth","naturalHeight","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","closePath","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","sourceTileGrid","targetTileGrid","wrappedTileCoord","gutter","getTileFunction","renderEdges","renderEdges_","gutter_","canvas_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","sources","getTileSize","triangulation","imageSmoothingEnabled","pixelRound","globalCompositeOperation","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","isBrokenDiagonalRendering","steps","ud","vd","step","strokeStyle","stroke","leftToLoad","sourceListenKey","unlistenSources_","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","getOrigin","tileSize","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","canvasTransform","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alpha","alphaChanged","postRenderFunction","expireCache","tileCallback","tileCount","getTileCoordCenter","useTile","updateCacheSize","BaseTile","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","pruneExceptNewestZ","tmpTileCoord","origins","origin_","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","getTileCoordForTileUrlFunction","withinExtentAndZ","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","createFromTileUrlFunctions","tileUrlFunctions","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop","expandUrl","templates","createFromTemplates","defaultTileLoadFunction","imageTile","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","isFullScreenSupported","requestFullscreen","fullscreenEnabled","isFullScreen","fullscreenElement","requestFullScreen","keys_","source_","isInFullscreen_","boundHandleMapTargetChange_","handleMapTargetChange_","cssClassName_","documentListeners_","activeClassName_","activeClassName","inactiveClassName_","inactiveClassName","labelNode_","labelActive","labelActiveNode_","button_","setClassName_","handleFullScreen_","exitFullscreen","exitFullScreen","requestFullScreenWithKeys","handleFullScreenChange_","wasInFullscreen","fullscreen","oldMap","PROJECTION","COORDINATE_FORMAT","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","transform_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","format","html","Overlay","insertFirst","autoPan","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","boundHandleRotationChanged_","handleRotationChanged_","rotateWithView_","rotateWithView","viewExtent_","ovmapDiv_","view_","ovmap","ovmap_","boxSizing","boxOverlay_","scope","overlayBox","move","mousePosition","endMoving","oldView","unbindView_","handleMapPropertyChange_","bindView_","resetExtent_","updateBoxAfterOvmapIsRendered_","newView","validateExtent_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","MAX_RATIO","LN2","updateBox_","ovresolution","ovmapPostrenderKey_","getRotateWithView","setRotateWithView","getOverviewMap","UNITS_PROP","LEADING_DIGITS","DEFAULT_DPI","bar","innerElement_","viewState_","minWidth_","minWidth","maxWidth_","maxWidth","renderedWidth_","handleUnitsChanged_","setUnits","scaleBar_","scaleBarSteps_","scaleBarText_","dpi_","dpi","setDpi","pointResolutionUnits","nominalCount","suffix","metersPerDegree","decimalCount","previousCount","previousWidth","previousDecimalCount","decimal","createScaleBar","resolutionScale","getScaleForResolution","mapScale","toLocaleString","stepWidth","scaleSteps","createMarker","cls","createStepText","isLast","lengthString","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","handleZoomToExtent","DragAndDropEvent","file","readAsBuffer_","formats_","formatConstructors","dropListenKeys_","handleResult_","formats","TextDecoder","tryReadFeatures_","featureProjection","addFeatures","registerListeners_","dropArea","handleDrop","handleStop","unregisterListeners_","readFeatures","files","dataTransfer","reader","FileReader","readAsArrayBuffer","readAsText","dropEffect","lastMagnitude_","magnitude","angleDelta","hidpi","hidpi_","culture_","culture","maxZoom_","apiKey_","imagerySet_","imagerySet","placeholderTiles_","placeholderTiles","fetch","response","json","handleImageryMetadataResponse","getApiKey","getImagerySet","statusCode","statusDescription","authenticationResultCode","resourceSets","resources","resource","zoomMax","imageWidth","imageHeight","zoomMin","imageUrlSubdomains","subdomain","quadKeyTileCoord","imageUrl","URL","digits","mask","quadKey","params","searchParams","delete","imageryProviders","imageryProvider","intersecting","coverageAreas","coverageArea","bbox","epsg4326Extent","async","show","entries","class","dragAndDrop","marker","mr","default","getMarker","getImgHeight"],"sourceRoot":""}