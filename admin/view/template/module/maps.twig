{{ header }}{{ column_left }}
<div
	id="content">
	<div
		class="page-header">
		<div
			class="container-fluid">
			<div
				class="float-end">
				<button
					type="submit"
					form="form-module"
					data-bs-toggle="tooltip"
					title="{{ button_save }}" class="btn btn-primary">
					<i
						class="fa-solid fa-save"></i>
				</button>
				<a
					href="{{ back }}" data-bs-toggle="tooltip"
					title="{{ button_back }}" class="btn btn-light">
					<i
						class="fa-solid fa-reply"></i>
				</a>
			</div>
			<h1>
				{{ heading_title }}</h1>
			<ol
				class="breadcrumb">
				{% for breadcrumb in breadcrumbs %}
					<li
						class="breadcrumb-item">
						<a
							href="{{ breadcrumb.href }}">
							{{ breadcrumb.text }}</a>
					</li>
				{% endfor %}
			</ol>
		</div>
	</div>
	<div
		class="container-fluid">
		<div
			class="card">
			<div
				class="card-header">
				<i
					class="fa-solid fa-pencil"></i>
				{{ text_edit }}</div>
			<div
				class="card-body">
				<form
					id="form-module"
					action="{{ save }}" method="post"
					enctype="multipart/form-data">
					<ul
						class="nav nav-tabs">
						<li
							class="nav-item">
							<a
								href="#tab-general"
								data-bs-toggle="tab"
								class="nav-link active">
								{{ tab_general }}</a>
						</li>
						<li
							class="nav-item">
							<a
								href="#tab-markers"
								data-bs-toggle="tab"
								class="nav-link">
								{{ tab_markers }}</a>
						</li>
						<li
							class="nav-item">
							<a
								href="#tab-size"
								data-bs-toggle="tab"
								class="nav-link">
								{{ tab_size }}</a>
						</li>
					</ul>
					<div
						class="tab-content">
						<div
							id="tab-general"
							class="tab-pane active">
							<div
								class="row mb-3 required">
								<label
									for="input-name"
									class="col-sm-2 col-form-label">
									{{ entry_name }}</label>
								<div
									class="col-sm-10">
									<input
										type="text"
										name="name"
										value="{{ name }}" id="input-name"
										class="form-control"/>
									<div
										id="error-name"
										class="invalid-feedback"></div>
								</div>
							</div>
							<div
								class="row mb-3">
								<label
									class="col-sm-2 col-form-label">
									{{ entry_controls }}</label>
								<div
									class="col-sm-10">
									<div
										id="controls"
										class="accordion">
										{% for id, control in m.control %}
											{% set item = 'control' %}
											{% set class = control.class %}
											{% set help = classes[item][class]['help'] %}
											{% include(ip~'item.twig') %}
										{% endfor %}
									</div>
									<div
										id="add_control"
										class="dropdown">
										<button
											class="btn btn-outline-primary mt-3 dropdown-toggle"
											type="button"
											data-bs-toggle="dropdown"
											aria-expanded="false">
											<i
												class="fa-solid fa-plus-circle"></i>
											{{ text_add_control }}
										</button>
										<ul
											class="dropdown-menu">
											{% for id, control in classes.control %}
												<li>
													<a
														class="dropdown-item"
														href="#">{{ id }}</a>
												</li>
											{% endfor %}
										</ul>
									</div>
								</div>
							</div>
							<div
								class="row mb-3">
								<label
									class="col-sm-2 col-form-label">
									{{ entry_interactions }}</label>
								<div
									class="col-sm-10">
									<div
										class="accordion">
										{% for id, interaction in m.interaction %}
											{% set item = 'interaction' %}
											{% set class = interaction.class %}
											{% set help = classes[item][class]['help'] %}
											{% include(ip~'item.twig') %}
										{% endfor %}
									</div>
									<button
										type="button"
										class="btn btn-outline-primary mt-3"
										onclick="addItem(this, 'interaction');">
										<i
											class="fa-solid fa-plus-circle"></i>
										{{ text_add_interaction }}</button>
								</div>
							</div>
							<div
								class="row mb-3">
								<label
									class="col-sm-2 col-form-label">
									{{ entry_layers }}</label>
								<div
									class="col-sm-10">
									<div
										class="accordion">
										{% for id, layer in m.layer %}
											{% set item = 'layer' %}
											{% set class = layer.class %}
											{% include(ip~'item.twig') %}
										{% endfor %}
									</div>
									<button
										type="button"
										class="btn btn-outline-primary mt-3"
										onclick="addItem(this, 'layer');">
										<i
											class="fa-solid fa-plus-circle"></i>
										{{ text_add_layer }}</button>
								</div>
							</div>
							<div
								class="row mb-3">
								<label
									class="col-sm-2 col-form-label">
									{{ entry_view }}</label>
								<div
									class="col-sm-10">
									<div
										class="card mt-3">
										<div
											class="card-body">
											<div
												class="card mb-3">
												<div
													class="card-body">
													<h5
														class="card-title mb-3">
														{{ text_view_center }}
													</h5>
													<div
														class="row mb-3">
														<label
															for="input-view_center_longitude"
															class="form-label">
															{{ entry_coordinate_longitude }}</label>
														<div>
															<input
																type="text"
																name="m[view][options][center][longitude]"
																value="{{ m.view.options.center.longitude ?? 0 }}" id="input-view_center_longitude"
																class="form-control"/>
															<div
																class="form-text">
																{{ help_coordinate_longitude }}</div>
														</div>
													</div>
													<div
														class="row mb-3">
														<label
															for="input-view_center_latitude"
															class="form-label">
															{{ entry_coordinate_latitude }}</label>
														<div>
															<input
																type="text"
																name="m[view][options][center][latitude]"
																value="{{ m.view.options.center.latitude ?? 0 }}" id="input-view_center_latitude"
																class="form-control"/>
															<div
																class="form-text">
																{{ help_coordinate_latitude }}</div>
														</div>
													</div>
												</div>
											</div>
											<div
												class="row mb-3">
												<label
													for="input-view_projection"
													class="form-label">
													{{ entry_view_projection }}</label>
												<div>
													<select
														name="m[view][options][projection]"
														id="input-view_projection"
														class="form-select">
														<option
															value="EPSG:3857"
															{% if m.view.options.projection == "EPSG:3857" %} selected
															{% endif %}>
															{{ entry_view_projection_EPSG_3857 }}</option>
														<option
															value="EPSG:4326"
															{% if m.view.options.projection == "EPSG:4326" %} selected
															{% endif %}>
															{{ entry_view_projection_EPSG_4326 }}</option>
													</select>
													<div
														class="form-text">
														{{ help_view_projection }}</div>
												</div>
											</div>
											<div
												class="row mb-3">
												<label
													for="input-view_resolution"
													class="form-label">
													{{ entry_view_resolution }}</label>
												<div>
													<input
														id="input-view_resolution"
														name="m[view][options][resolution]"
														value="{{ m.view.options.resolution }}" type="number"
														min="0"
														class="form-control"/>
													<div
														class="form-text">
														{{ help_view_resolution }}</div>
												</div>
											</div>
											<div
												class="row mb-3">
												<label
													for="input-view_zoom"
													class="form-label">
													{{ entry_view_zoom }}</label>
												<div>
													<input
														id="input-view_zoom"
														name="m[view][options][zoom]"
														value="{{ m.view.options.zoom ?? 0 }}" type="number"
														min="0"
														class="form-control"/>
													<div
														class="form-text">
														{{ help_view_zoom }}</div>
												</div>
											</div>
										</div>
									</div>
								</div>
							</div>
							<div
								class="row mb-3">
								<label
									for="input-status"
									class="col-sm-2 col-form-label">
									{{ entry_status }}</label>
								<div
									class="col-sm-10">
									<div
										class="form-check form-switch form-switch-lg">
										<input
											type="hidden"
											name="status"
											value="0"/>
										<input
											type="checkbox"
											name="status"
											value="1"
											id="input-status"
											class="form-check-input"
											{% if status %} checked
											{% endif %}/>
									</div>
								</div>
							</div>
							<input
								type="hidden"
								name="module_id"
								value="{{ module_id ?? 0 }}" id="input-module-id"/>
						</div>
						<div
							id="tab-markers"
							class="tab-pane accordion">
							<div
								class="accordion">
								{% for id, marker in m.marker %}
									{% set item = 'marker' %}
									{% set class = 'Marker' %}
									{% include(ip~'item.twig') %}
								{% endfor %}
							</div>
							<button
								type="button"
								class="btn btn-outline-primary mt-3"
								onclick="addItem(this, 'marker');">
								<i
									class="fa-solid fa-plus-circle"></i>
								{{ text_add_marker }}</button>
						</div>
						<div
							id="tab-size"
							class="tab-pane">
							<div
								class="row mb-3 required">
								<label
									for="input-width"
									class="col-sm-2 col-form-label">
									{{ entry_width }}</label>
								<div
									class="col-sm-10">
									<input
										type="text"
										name="width"
										value="{{ width ?? '100%' }}" id="input-width"
										class="form-control"/>
									<div
										id="error-width"
										class="invalid-feedback"></div>
								</div>
							</div>
							<div
								class="row mb-3 required">
								<label
									for="input-height"
									class="col-sm-2 col-form-label">
									{{ entry_height }}</label>
								<div
									class="col-sm-10">
									<input
										type="text"
										name="height"
										value="{{ height ?? '200px' }}" id="input-height"
										class="form-control"/>
									<div
										id="error-height"
										class="invalid-feedback"></div>
								</div>
							</div>
						</div>
					</div>
				</form>
			</div>
		</div>
	</div>
</div>
{{ footer }}

 <script>
// Form
    $(document).on('submit', 'form', function (e) {
        e.preventDefault();

        var element = this;

        var form = e.target;

        var action = $(form).attr('action');

        if (e.originalEvent !== undefined && e.originalEvent.submitter !== undefined) {
            var button = e.originalEvent.submitter;
        } else {
            var button = '';
        }

        $.ajax({
            url: action.replaceAll('&amp;', '&'),
            type: 'POST',
            data: new FormData(this),
            dataType: 'json',
            processData: false,
            contentType: false,
            beforeSend: function () {
                $(button).button('loading');
            },
            complete: function () {
                $(button).button('reset');
            },
            success: function (json) {
                $('.alert-dismissible').remove();
                $(element).find('.is-invalid').removeClass('is-invalid');
                $(element).find('.invalid-feedback').removeClass('d-block');

                if (json['redirect']) {
                    location = json['redirect'];
                }

                if (typeof json['error'] == 'string') {
                    $('#alert').prepend('<div class="alert alert-danger alert-dismissible"><i class="fa-solid fa-circle-exclamation"></i> ' + json['error'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');
                }

                if (typeof json['error'] == 'object') {
                    if (json['error']['warning']) {
                        $('#alert').prepend('<div class="alert alert-danger alert-dismissible"><i class="fa-solid fa-circle-exclamation"></i> ' + json['error']['warning'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');
                    }

                    for (key in json['error']) {
                        $('#input-' + key.replaceAll('_', '-')).addClass('is-invalid').find('.form-control, .form-select, .form-check-input, .form-check-label').addClass('is-invalid');
                        $('#error-' + key.replaceAll('_', '-')).html(json['error'][key]).addClass('d-block');
                    }
                }

                if (json['success']) {
                    $('#alert').prepend('<div class="alert alert-success alert-dismissible"><i class="fa-solid fa-circle-check"></i> ' + json['success'] + ' <button type="button" class="btn-close" data-bs-dismiss="alert"></button></div>');

                    // Refresh
                    var url = $(form).attr('data-oc-load');
                    var target = $(form).attr('data-oc-target');

                    if (url !== undefined && target !== undefined) {
                        $(target).load(url);
                    }
                }

                // Replace any form values that correspond to form names.
                for (key in json) {
                    $(element).find('[name=\'' + key + '\']').val(json[key]);
                }
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
            }
        });
    });

    function addItem(e, item) {

        let cl;

        if (item == 'marker') {
        	cl = 'Marker';
        } else {
        let classes = {{ classes|json_encode }};
        cl = classes[item][Math.floor(Math.random() * classes[item].length)];
    	}

    let data = '&class=' + cl;

    let action = '{{ addItem }}';
    $.ajax({
    url: action.replaceAll('&amp;', '&'),
            data: data,
            dataType: 'html',
            processData: false,
            contentType: false,
            beforeSend: function () {
            },
            complete: function () {
            },
            success: function (data) {

            e.parentElement.querySelector('.accordion')
                    .insertAdjacentHTML('beforeend', data);
                    e = e.parentElement.querySelector('.accordion');
                    e = $(e).children('.accordion-item').last()
                    .find('input')[0];
                    changeItemName(e);
                //    const classes_help = {{ classes_help }};
                    if (item == 'layer'){
            const el1 = $(e).closest('.accordion-item')
                    .find('.help_item_class')[0];
                   // $(el1).html(classes_help[$(e).val()]);
                    const el2 = $(e).closest('.accordion-item')
                    .find('.help_source')[0];
                    //$(el2).html(classes_help[$(e).val()]);
            } else {
            const el3 = $(e).closest('.accordion-item')
                    .find('.help_item_class')[0];
                //    $(el3).html(classes_help[$(e).val()]);
            }
            },
            error: function (xhr, ajaxOptions, thrownError) {
            console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
            }
    });
    }

    function changeItemName(e) {

        $(e).closest('.accordion-item')
                .children('.accordion-header')
                .children('button')
                .html($(e).val());
    }

    function delItem(e) {
        e.parentElement.parentElement.parentElement.remove();
    }

    function changeSource(e) {

        let id = $(e).attr('item_id');
        let cl = $(e).val();

        let action = '{{ changeSource }}';

        $.ajax({
            url: action.replaceAll('&amp;', '&'),
            data: 'class=' + cl + '&id=' + id,
            dataType: 'html',
            processData: false,
            contentType: false,
            success: function (data) {
                $(e).closest('.card').find('.source-body')
                        .html(data);

         //       const classes_help = {{ classes_help }};
                const el = $(e).closest('.card')
                        .find('.help_source')[0];
         //       $(el).html(classes_help[$(e).val()]);
            },
            error: function (xhr, ajaxOptions, thrownError) {
                console.log(thrownError + "\r\n" + xhr.statusText + "\r\n" + xhr.responseText);
            }
        });
    }

    function previewFile(id) {
        let preview = document.querySelector("#thumb-marker" + id);
        const file = document.getElementById("marker" + id).files[0];
        let reader = new FileReader();
        reader.onloadend = function () {
            preview.src = reader.result;
        };
        if (file) {
            reader.readAsDataURL(file);
        } else {
            preview.src = "";
        }
    }

    function changeMarkerName(id) {
        const source = document.getElementById('input-marker' + id + '_name');
        const result = document.getElementById('button-marker' + id + '_name');
        result.innerText = source.value;
    }

    window.onload = function () {

        e = $('.item-name');
        for (element of e) {
            changeItemName(element);
        }

        e = $('.layer-source');
        for (element of e) {
            changeSource(element);
        }
    };


$(document).ready(function(){
	let classes = {{ classes|json_encode }};

	$('#add_control a.dropdown-item').on("click", function(e){

	let cl = $(this).text();
	
	let el = $('#controls')[0];

       	el.insertAdjacentHTML('beforeend', 
			classes['control'][cl]['template'] 
		);

    e.preventDefault();
	});
});
</script>

<style>
	.dropdown-toggle::after {
		display: inline-block;
		margin-left: 0.255em;
		vertical-align: 0.255em;
		content: "";
		border-top: 0.3em solid;
		border-right: 0.3em solid transparent;
		border-bottom: 0;
		border-left: 0.3em solid transparent;
	}
</style>
